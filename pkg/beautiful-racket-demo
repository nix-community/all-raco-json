#hasheq((author . "mb@mbtype.com") (authors . ("mb@mbtype.com")) (build . #hash((conflicts-log . #f) (dep-failure-log . #f) (docs . ()) (failure-log . #f) (min-failure-log . #f) (success-log . "server/built/install/beautiful-racket-demo.txt") (test-failure-log . #f) (test-success-log . "server/built/test-success/beautiful-racket-demo.txt"))) (checksum . "b0d133f4ba4149ea506d8b0dbd3845c915efdd06") (checksum-error . #f) (collection . (multi)) (conflicts . ()) (date-added . 1556661341) (dependencies . ("base" "sugar" "beautiful-racket-lib" "rackunit-lib" "brag" "srfi-lib" "draw-lib" "syntax-color-lib" "gui-lib" "math-lib" "at-exp-lib")) (description . "Sample projects for “Beautiful Racket”") (implies . ()) (modules . ((lib "mirror-demo/test.rkt") (lib "basic-demo-3/setup.rkt") (lib "tacopocalypse-prep/main.rkt") (lib "basic-demo-2/parse-stx.rkt") (lib "tacopocalypse-demo/main.rkt") (lib "hdl-demo/Xor.tst.rkt") (lib "basic-demo-2/line.rkt") (lib "scriptish-demo/test.rkt") (lib "basic-demo-3/sample-shell.rkt") (lib "hdl-demo/Fanout.hdl.rkt") (lib "basic-demo-2/struct.rkt") (lib "basic-demo-2/sample-math.rkt") (lib "wires-demo/test-sources.rkt") (lib "atomic-taco-demo/test.rkt") (lib "quantum-taco-demo/test.rkt") (lib "javascriptlike-demo/rackety.rkt") (lib "jsonic-demo-3/parser.rkt") (lib "basic-demo-nth/main.rkt") (lib "regexcellent-demo/main.rkt") (lib "txtadv-demo/reader.rkt") (lib "atomic-taco-demo/main.rkt") (lib "basic-demo-3/sample.rkt") (lib "tacogram-demo/main.rkt") (lib "basic-demo-3/elements.rkt") (lib "basic-demo-2/run.rkt") (lib "hdl-demo/And.tst.rkt") (lib "basic-demo-2a/tokenizer.rkt") (lib "basic-demo-2/expr.rkt") (lib "txtadv-demo/demo-short.rkt") (lib "txtadv-demo/world-sexp.rkt") (lib "bf-demo/reader.rkt") (lib "txtadv-demo/5-lang/txtadv.rkt") (lib "basic-demo-3/report-args.rkt") (lib "basic-demo-2a/run.rkt") (lib "hdl-demo/expander.rkt") (lib "basic-demo-3/test-sources.rkt") (lib "conjunction-demo/test.rkt") (lib "jsonic-demo-2/expander.rkt") (lib "bf-demo/test-sources.rkt") (lib "txtadv-demo/4-type/txtadv.rkt") (lib "injunction-demo/main.rkt") (lib "taco-victory-demo/main.rkt") (lib "pythonesque-demo/test.rkt") (lib "funstacker-demo/funstacker-test.rkt") (lib "hdl-demo/Nand.tst.rkt") (lib "jsonic-demo-2/indenter.rkt") (lib "basic-demo/expander.rkt") (lib "jsonic-demo-2/buttons.rkt") (lib "xmlish-demo/grammar.rkt") (lib "basic-demo-3/args.rkt") (lib "jsonic-demo/parser.rkt") (lib "stackerizer-demo/stackerizer.rkt") (lib "basic-demo-2a/go.rkt") (lib "jsonic-demo-3/jsonic-test.rkt") (lib "jsonic-demo/jsonic-test.rkt") (lib "quantum-taco-demo/main.rkt") (lib "txtadv-demo/3-module-lang/txtadv.rkt") (lib "basic-demo-3/main.rkt") (lib "pl-checklist-demo/test.rkt") (lib "taco-compiler-demo/main.rkt") (lib "numberstring-demo/main.rkt") (lib "txtadv-demo/2-modules/world.rkt") (lib "basic-demo-2/main.rkt") (lib "scriptish-demo/expander.rkt") (lib "txtadv-demo/3-module-lang/world.rkt") (lib "basic-demo-2a/sample.rkt") (lib "hdl-demo/Nand2.hdl.rkt") (lib "jsonic-demo-2/test-sources.rkt") (lib "basic-demo-2/elements.rkt") (lib "txtadv-demo/tokenizer.rkt") (lib "stacker-demo/stacker-test.rkt") (lib "basic-demo-3/sample-for.rkt") (lib "basic-demo-2a/test-sources.rkt") (lib "jsonic-demo/test-sources.rkt") (lib "basic-demo-nth/tokenizer.rkt") (lib "basic-demo/parse-stx.rkt") (lib "txtadv-demo/parser.rkt") (lib "stacker-demo/stacker.rkt") (lib "txtadv-demo/main.rkt") (lib "scriptish-demo/grammar.rkt") (lib "jsonic-demo-3/main.rkt") (lib "txtadv-demo/5-lang/txtadv-reader.rkt") (lib "basic-demo-2a/elements.rkt") (lib "basic-demo-3/line.rkt") (lib "basic-demo-3/colorer.rkt") (lib "basic-demo-2/cond.rkt") (lib "basic-demo-2a/parser.rkt") (lib "jsonic-demo/main.rkt") (lib "basic-demo-3/misc.rkt") (lib "algebra-demo/grammar.rkt") (lib "pl-checklist-demo/main.rkt") (lib "taco-victory-demo/grammar.rkt") (lib "basic-demo/test-parser.rkt") (lib "hdl-demo/Dmux.tst.rkt") (lib "basic-demo-3/sample-exporter.rkt") (lib "bf-demo/expander-slow.rkt") (lib "hdl-demo/Not.tst.rkt") (lib "hdl-demo/DMux4Way.tst.rkt") (lib "txtadv-demo/expander.rkt") (lib "chip8-demo/chip8.rkt") (lib "read-only-demo/main.rkt") (lib "basic-demo-nth/parser.rkt") (lib "basic-demo-2/private/sample-pseudocode.rkt") (lib "basic-demo-3/tokenize-only.rkt") (lib "taco-decompiler-demo/run.rkt") (lib "bf-demo/test-tokenizer.rkt") (lib "basic-demo-2/lexer.rkt") (lib "basic-demo-2/expander.rkt") (lib "basic-demo-3/sample-math.rkt") (lib "wires-demo/test.rkt") (lib "hdl-demo/grammar.rkt") (lib "bf-demo/atsign.rkt") (lib "javascriptlike-demo/main.rkt") (lib "jsonic-demo-3/scribblings/jsonic.scrbl") (lib "hdl-demo/Mux.tst.rkt") (lib "jsonic-demo-3/parser-test.rkt") (lib "hdl-tst-demo/main.rkt") (lib "tacopocalypse-demo/test.rkt") (lib "javascriptlike-demo/test.rkt") (lib "wires-demo/puzzle.rkt") (lib "jsonic-demo-3/reader.rkt") (lib "hdl-demo/Nand.hdl.rkt") (lib "jsonic-demo-2/colorer.rkt") (lib "wires-demo/main.rkt") (lib "jsonic-demo-2/tokenizer.rkt") (lib "conjunction-demo/main.rkt") (lib "basic-demo-2a/main.rkt") (lib "basic-demo-3/parser.rkt") (lib "tacogram-demo/test.rkt") (lib "basic-demo-3/tokenizer.rkt") (lib "jsonic-demo-3/colorer.rkt") (lib "regexcellent-demo/test.rkt") (lib "basic-demo-2/sample-var.rkt") (lib "basic-demo-2/sample-cond.rkt") (lib "jsonic-demo-2/main.rkt") (lib "bf-demo/main.rkt") (lib "txtadv-demo/5-lang/world.rkt") (lib "precalc-demo/main.rkt") (lib "bf-demo/expander.rkt") (lib "basic-demo-3/structs.rkt") (lib "basic-demo-3/sample-importer.rkt") (lib "basic-demo/lexer-test.rkt") (lib "basic-demo-2a/misc.rkt") (lib "basic-demo-2/tokenizer.rkt") (lib "hdl-tst-demo/grammar.rkt") (lib "jsonic-demo/reader.rkt") (lib "basic-demo-2/go.rkt") (lib "mirror-demo/main.rkt") (lib "jsonic-demo-3/buttons.rkt") (lib "dyadic-demo/source.rkt") (lib "hdl-demo/DMux4Way-test.rkt") (lib "basic-demo-nth/basic-test.rkt") (lib "basic-demo-3/sample-provide.rkt") (lib "hdl-demo/Dmux-test.rkt") (lib "txtadv-demo/6-color/world.rkt") (lib "xmlish-demo/main.rkt") (lib "basic-demo-2a/lexer.rkt") (lib "jsonic-demo-3/tokenizer.rkt") (lib "precalc-demo/test.rkt") (lib "basic-demo-3/expr.rkt") (lib "jsonic-demo-2/parser-test.rkt") (lib "txtadv-demo/0-longhand/txtadv+world.rkt") (lib "jsonic-demo-2/parser.rkt") (lib "bf-demo/test-reader.rkt") (lib "dyadic-demo/main.rkt") (lib "basic-demo-2a/line.rkt") (lib "passthrough-demo/test.rkt") (lib "expand-only-demo/main.rkt") (lib "taco-compiler-demo/test.rkt") (lib "hdl-demo/Toffoli.hdl.rkt") (lib "basic-demo/private/sample-pseudocode.rkt") (lib "stackerizer-demo/stackerizer-test.rkt") (lib "scriptish-demo/subtest.rkt") (lib "basic-demo/sample.rkt") (lib "basic-demo-3/lexer.rkt") (lib "wires-demo/with-promises.rkt") (lib "basic-demo-nth/colorer.rkt") (lib "algebra-demo/main.rkt") (lib "basic-demo-2/parser.rkt") (lib "bf-demo/factorial.rkt") (lib "basic-demo/tokenizer.rkt") (lib "bf-demo/parser-tester.rkt") (lib "hdl-demo/main.rkt") (lib "pythonesque-demo/grammar.rkt") (lib "basic-demo-2a/expander.rkt") (lib "basic-demo-2/sample-for.rkt") (lib "basic-demo-3/sample-input.rkt") (lib "jsonic-demo-2/jsonic-test.rkt") (lib "txtadv-demo/6-color/color.rkt") (lib "javascriptlike-demo/sexped.rkt") (lib "injunction-demo/test.rkt") (lib "xmlish-demo/test.rkt") (lib "basic-demo-2a/expr.rkt") (lib "hdl-demo/Dmux4Way.hdl.rkt") (lib "basic-demo-3/expander.rkt") (lib "tacogram-demo/grammar.rkt") (lib "taco-victory-demo/test.rkt") (lib "hdl-demo/bus-properties.rkt") (lib "bf-demo/test-parser.rkt") (lib "basic-demo-2/test-sources.rkt") (lib "basic-demo/tokenize-only.rkt") (lib "jsonic-demo/expander.rkt") (lib "basic-demo-3/cond.rkt") (lib "basic-demo-2/parse-only.rkt") (lib "txtadv-demo/world-test.rkt") (lib "pl-checklist-lang-maker/main.rkt") (lib "precalc-demo/grammar.rkt") (lib "jsonic-demo/tokenizer.rkt") (lib "hdl-demo/DMux.hdl.rkt") (lib "basic-demo/test-sources.rkt") (lib "basic-demo/main.rkt") (lib "javascriptlike-demo/less-rackety.rkt") (lib "txtadv-demo/2-modules/txtadv.rkt") (lib "funstacker-demo/funstacker-h2.rkt") (lib "txtadv-demo/4-type/world.rkt") (lib "basic-demo-3/sample-cond.rkt") (lib "basic-demo-2/sample-gosub.rkt") (lib "basic-demo-2/colorer.rkt") (lib "basic-demo-nth/importest.rkt") (lib "taco-decompiler-demo/main.rkt") (lib "bf-demo/atsign-sexp.rkt") (lib "basic-demo-nth/expander.rkt") (lib "basic-demo-3/run.rkt") (lib "basic-demo-3/struct.rkt") (lib "basic-demo-3/parse-stx.rkt") (lib "basic-demo-2/misc.rkt") (lib "basic-demo-3/private/sample-pseudocode.rkt") (lib "regexcellent-demo/grammar.rkt") (lib "hdl-demo/Mux.hdl.rkt") (lib "stacker-demo/test-sources.rkt") (lib "bf-demo/hello.rkt") (lib "basic-demo-2/sample.rkt") (lib "pythonesque-demo/main.rkt") (lib "funstacker-demo/test-sources.rkt") (lib "scriptish-demo/main.rkt") (lib "hdl-tst-demo/expander.rkt") (lib "basic-demo-3/sample-import.rkt") (lib "basic-demo-3/parse-only.rkt") (lib "numberstring-demo/source.rkt") (lib "basic-demo-2/sample-input.rkt") (lib "hdl-demo/HalfAdder.tst.rkt") (lib "basic-demo-3/sample-gosub.rkt") (lib "bf-demo/parser.rkt") (lib "hdl-demo/Or.tst.rkt") (lib "hdl-demo/Mux-test.rkt") (lib "tacopocalypse-prep/test.rkt") (lib "basic-demo/parse-only.rkt") (lib "hdl-demo/Not.hdl.rkt") (lib "jsonic-demo-3/indenter.rkt") (lib "bf-demo/expander-imperative.rkt") (lib "jsonic-demo-2/reader.rkt") (lib "funstacker-demo/funstacker.rkt") (lib "basic-demo-3/go.rkt") (lib "txtadv-demo/6-color/txtadv.rkt") (lib "javascriptlike-demo/grammar.rkt") (lib "hdl-demo/And.hdl.rkt") (lib "basic-demo/lexer.rkt") (lib "stackerizer-demo/test-sources.rkt") (lib "txtadv-demo/world.rkt") (lib "hdl-demo/HalfAdder.hdl.rkt") (lib "txtadv-demo/1-monolith/txtadv+world.rkt") (lib "passthrough-demo/main.rkt") (lib "basic-demo-2a/struct.rkt") (lib "basic-demo/parser.rkt") (lib "taco-decompiler-demo/test.rkt") (lib "algebra-demo/test.rkt") (lib "jsonic-demo-3/test-sources.rkt") (lib "hdl-demo/Or.hdl.rkt") (lib "read-only-demo/test.rkt") (lib "hdl-demo/bus.rkt") (lib "txtadv-demo/6-color/reader.rkt") (lib "basic-demo-3/sample-def.rkt") (lib "jsonic-demo-3/expander.rkt") (lib "hdl-demo/Xor.hdl.rkt") (lib "expand-only-demo/test.rkt") (lib "javascriptlike-demo/expander.rkt"))) (name . "beautiful-racket-demo") (ring . 1) (search-terms . #hasheq((:build-success: . #t) (author:mb@mbtype.com . #t) (beautiful-racket . #t) (ring:1 . #t))) (source . "https://github.com/mbutterick/beautiful-racket.git?path=beautiful-racket-demo") (tags . ("beautiful-racket")) (versions . #hash((default . #hasheq((checksum . "b0d133f4ba4149ea506d8b0dbd3845c915efdd06") (source . "https://github.com/mbutterick/beautiful-racket.git?path=beautiful-racket-demo") (source_url . "https://github.com/mbutterick/beautiful-racket.git?path=beautiful-racket-demo"))))))