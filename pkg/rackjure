#hasheq((author . "racket@greghendershott.com") (authors . ("racket@greghendershott.com")) (build . #hash((conflicts-log . #f) (dep-failure-log . #f) (docs . (("main" "rackjure" "doc/rackjure@rackjure/index.html"))) (failure-log . #f) (min-failure-log . #f) (success-log . "server/built/install/rackjure.txt") (test-failure-log . #f) (test-success-log . "server/built/test-success/rackjure.txt"))) (checksum . "9f7c74f5a499f71407890037839a3fa3b178dcef") (checksum-error . #f) (collection . (multi)) (conflicts . ()) (dependencies . ("base" "rackunit-lib" "threading-lib" "rackunit-lib" "racket-doc" "sandbox-lib" "scribble-lib" "threading-doc")) (description . "Some Clojure-inspired idioms.") (implies . ()) (license . "BSD-2-Clause") (modules . ((lib "rackjure/alist.rkt") (lib "rackjure/bench.rkt") (lib "rackjure/test.rkt") (lib "rackjure/lambda-reader.rkt") (lib "rackjure/rackjure.rkt") (lib "rackjure/main.rkt") (lib "rackjure/conditionals.rkt") (lib "rackjure/egal.rkt") (lib "rackjure/lang/language-info.rkt") (lib "rackjure/lang/runtime-config.rkt") (lib "rackjure/lang/reader.rkt") (lib "rackjure/base/lang/reader.rkt") (lib "rackjure/dict.rkt") (lib "rackjure/threading.rkt") (lib "rackjure/base.rkt") (lib "rackjure/app.rkt") (lib "rackjure/str.rkt") (lib "rackjure/rackjure.scrbl") (lib "rackjure/check-expansion.rkt") (lib "rackjure/utils.rkt"))) (name . "rackjure") (readme-url . "https://github.com/greghendershott/rackjure/tree/master/README.md") (ring . 1) (rt-dependencies . (("base" #:version "6.3") "rackunit-lib" ("threading-lib" #:version "1.1"))) (search-terms . #hasheq((:build-success: . #t) (:docs: . #t) (author:racket@greghendershott.com . #t) (author:racketÎ»61106b0 . #t) (language . #t) (ring:1 . #t))) (source . "http://github.com/greghendershott/rackjure/tree/master") (tags . ("language")) (versions . #hash((default . #hasheq((checksum . "9f7c74f5a499f71407890037839a3fa3b178dcef") (source . "github://github.com/greghendershott/rackjure/master") (source_url . "http://github.com/greghendershott/rackjure/tree/master"))))))