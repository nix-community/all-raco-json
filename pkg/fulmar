#hasheq((author . "earl.christopher@gmail.com") (authors . ("earl.christopher@gmail.com")) (build . #hash((conflicts-log . #f) (dep-failure-log . #f) (docs . (("main" "fulmar-doc" "doc/fulmar-doc@fulmar/index.html"))) (failure-log . #f) (min-failure-log . #f) (success-log . "server/built/install/fulmar.txt") (test-failure-log . #f) (test-success-log . "server/built/test-success/fulmar.txt"))) (checksum . "4cf60699558b3bb28fa813443456993d1563bfb2") (checksum-error . #f) (collection . "fulmar") (conflicts . ()) (dependencies . ("base" "scribble-lib" "typed-racket-lib" "rackunit-lib" "sandbox-lib" "at-exp-lib" "at-exp-lib")) (description . "Generate C++ code from S-expressions") (implies . ()) (license . #f) (modules . ((lib "fulmar/meta.rkt") (lib "fulmar/standard-chunk.rkt") (lib "fulmar/private/doc/doc-scraper.rkt") (lib "fulmar/private/generate.rkt") (lib "fulmar/tests/standard-chunk-tests.rkt") (lib "fulmar/main.rkt") (lib "fulmar/generate.rkt") (lib "fulmar/doc.rkt") (lib "fulmar/type-decls.rkt") (lib "fulmar/private/doc/doc-gen.rkt") (lib "fulmar/apply.rkt") (lib "fulmar/private/fulmar-core.rkt") (lib "fulmar/tests/fulmar-core-tests.rkt") (lib "fulmar/doc/fulmar-doc.scrbl") (lib "fulmar/private/doc/document.rkt") (lib "fulmar/verify.rkt") (lib "fulmar/version.rkt") (lib "fulmar/FulmarAbbreviations.rkt") (lib "fulmar/private/utility.rkt") (lib "fulmar/tests/main.rkt") (lib "fulmar/private/core-chunk.rkt") (lib "fulmar/tests/core-chunk-tests.rkt"))) (name . "fulmar") (ring . 1) (rt-dependencies . ("base" "scribble-lib" "typed-racket-lib" "rackunit-lib" "sandbox-lib" "at-exp-lib")) (search-terms . #hasheq((:build-success: . #t) (:docs: . #t) (:no-tag: . #t) (author:earl.christopher@gmail.com . #t) (author:earl.christopherÎ»5e3a243 . #t) (ring:1 . #t))) (source . "http://github.com/cwearl/fulmar.git/tree/master") (tags . ()) (versions . #hash((default . #hasheq((checksum . "4cf60699558b3bb28fa813443456993d1563bfb2") (source . "git://github.com/cwearl/fulmar.git") (source_url . "http://github.com/cwearl/fulmar.git/tree/master"))))))