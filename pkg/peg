#hasheq((author . "rain1@airmail.cc") (authors . ("rain1@airmail.cc")) (build . #hash((conflicts-log . #f) (dep-failure-log . #f) (docs . (("main" "peg" "doc/peg@peg/index.html"))) (failure-log . #f) (min-failure-log . #f) (success-log . "server/built/install/peg.txt") (test-failure-log . #f) (test-success-log . "server/built/test-success/peg.txt"))) (checksum . "5191749fa13686045f2170358097eb81d710a9de") (checksum-error . #f) (collection . "peg") (conflicts . ()) (dependencies . ("base" "rackunit-lib" "scribble-lib" "racket-doc")) (description . "PEG parser generator") (implies . ()) (modules . ((lib "peg/scribblings/peg.scrbl") (lib "peg/tests/peg-syntax-harness/peg-test-guile-passwd.rkt") (lib "peg/tests/s-exp/tests.rkt") (lib "peg/tests/docs-example-1.rkt") (lib "peg/tests/peg-syntax/peg-example-named-pattern.rkt") (lib "peg/tests/peg-syntax/peg-example-canopy.rkt") (lib "peg/tests/test-regex-range.rkt") (lib "peg/tests/peg-syntax/peg-example-float.rkt") (lib "peg/tests/peg-syntax-harness/peg-test-peg-in-peg-comments.rkt") (lib "peg/tests/peg-syntax-harness/peg-test-peg-as-peg.rkt") (lib "peg/tests/peg-syntax/peg-example-bracket-expand.rkt") (lib "peg/push-pop-boxes.rkt") (lib "peg/tests/peg-syntax/peg-example-shell.rkt") (lib "peg/tests/docs-example-2.rkt") (lib "peg/tests/peg-syntax/peg-example-peg-as-peg.rkt") (lib "peg/tests/peg-syntax/peg-example-guile-passwd.rkt") (lib "peg/tests/test-shell.rkt") (lib "peg/tests/docs-example-3.rkt") (lib "peg/tests/peg-syntax/peg-example-guile-cfunc.rkt") (lib "peg/tests/test-json.rkt") (lib "peg/tests/test-multibrack.rkt") (lib "peg/peg-to-scheme.rkt") (lib "peg/tests/test-etc-passwd.rkt") (lib "peg/tests/list-monad.rkt") (lib "peg/tests/peg-syntax-harness/test-named-pattern.rkt") (lib "peg/tests/peg-syntax-harness/peg-test-antlr-query-language.rkt") (lib "peg/tests/test-bracket-expand.rkt") (lib "peg/tests/test-unicode.rkt") (lib "peg/tests/test-quests.rkt") (lib "peg/tests/peg-syntax-harness/peg-test-expr.rkt") (lib "peg/tests/peg-syntax-harness/test-comma-separated-number.rkt") (lib "peg/tests/peg-syntax/peg-example-peg-in-peg-comments.rkt") (lib "peg/tests/peg-syntax/peg-example-imp.rkt") (lib "peg/tests/peg-syntax/peg-example-newick.rkt") (lib "peg/tests/peg-syntax-harness/peg-test-guile-cfunc.rkt") (lib "peg/s-exp.rkt") (lib "peg/tests/peg-syntax/peg-example-antlr-query-language.rkt") (lib "peg/tests/peg-syntax/peg-example-expr.rkt") (lib "peg/tests/peg-syntax/peg-example-positive-lookahead.rkt") (lib "peg/tests/peg-syntax-harness/test-imp.rkt") (lib "peg/tests/s-exp/test-dotted-pair.rkt") (lib "peg/tests/peg-syntax/peg-example-empty.rkt") (lib "peg/tests/peg-syntax/peg-example-quests.rkt") (lib "peg/tests/test-blg.rkt") (lib "peg/tests/peg-syntax-harness/peg-test-positive-lookahead.rkt") (lib "peg/tests/test-cfunc.rkt") (lib "peg/tests/test-verbose.rkt") (lib "peg/main.rkt") (lib "peg/tests/peg-syntax-harness/test-newick.rkt") (lib "peg/tests/s-exp/test-chars.rkt") (lib "peg/peg-result.rkt") (lib "peg/tests/test-tiny.rkt") (lib "peg/tests/s-exp/test-numbers.rkt") (lib "peg/tests/peg-syntax/peg-example-n.rkt") (lib "peg/tests/peg-syntax/peg-example-false-action.rkt") (lib "peg/peg.rkt") (lib "peg/tests/peg-syntax-harness/peg-test-false-action.rkt") (lib "peg/tests/peg-syntax/peg-example-comma-separated-number.rkt") (lib "peg/tests/peg-syntax-harness/test-import.rkt") (lib "peg/tests/peg-syntax/peg-example-import.rkt") (lib "peg/tests/peg-syntax-harness/peg-test-canopy.rkt") (lib "peg/tests/test-palindrome.rkt") (lib "peg/peg-in-peg.rkt"))) (name . "peg") (ring . 1) (search-terms . #hasheq((:build-success: . #t) (:docs: . #t) (author:rain1@airmail.cc . #t) (parser . #t) (ring:1 . #t))) (source . "https://github.com/rain-1/racket-peg.git#5191749fa13686045f2170358097eb81d710a9de") (tags . ("parser")) (versions . #hash((default . #hasheq((checksum . "5191749fa13686045f2170358097eb81d710a9de") (source . "https://github.com/rain-1/racket-peg.git#5191749fa13686045f2170358097eb81d710a9de") (source_url . "https://github.com/rain-1/racket-peg.git#5191749fa13686045f2170358097eb81d710a9de"))))))