#hash((author . "mflatt@racket-lang.org") (authors . ("mflatt@racket-lang.org")) (build . #hash((conflicts-log . #f) (dep-failure-log . #f) (docs . ()) (failure-log . #f) (min-failure-log . #f) (success-log . #f) (test-failure-log . #f) (test-success-log . #f))) (checksum . "1fe9d2d3f30302a744914d14f33683d9f8fd41bc") (checksum-error . #f) (collection . (multi)) (conflicts . ()) (dependencies . ("base" "rackunit-lib")) (description . "implementation (no documentation) part of \"parser-tools\"") (implies . ()) (license . "(Apache-2.0 OR MIT)") (modules . ((lib "parser-tools/lex-plt-v200.rkt") (lib "parser-tools/lex-sre.rkt") (lib "parser-tools/private-lex/token.rkt") (lib "parser-tools/private-lex/unicode-chars.rkt") (lib "parser-tools/private-lex/front.rkt") (lib "parser-tools/lex.rkt") (lib "parser-tools/private-yacc/parser-builder.rkt") (lib "parser-tools/private-lex/error-tests.rkt") (lib "parser-tools/private-lex/token-syntax.rkt") (lib "parser-tools/private-lex/re.rkt") (lib "parser-tools/examples/read.rkt") (lib "parser-tools/private-yacc/parser-actions.rkt") (lib "parser-tools/private-yacc/lalr.rkt") (lib "parser-tools/cfg-parser.rkt") (lib "parser-tools/private-lex/actions.rkt") (lib "parser-tools/examples/calc.rkt") (lib "parser-tools/yacc.rkt") (lib "parser-tools/private-yacc/table.rkt") (lib "parser-tools/private-yacc/graph.rkt") (lib "parser-tools/private-lex/stx.rkt") (lib "parser-tools/yacc-to-scheme.rkt") (lib "parser-tools/private-yacc/yacc-helper.rkt") (lib "parser-tools/private-lex/util.rkt") (lib "parser-tools/private-yacc/grammar.rkt") (lib "parser-tools/private-lex/deriv.rkt") (lib "parser-tools/private-yacc/lr0.rkt") (lib "parser-tools/private-yacc/input-file-parser.rkt"))) (name . "parser-tools-lib") (readme-url . #f) (ring . 0) (rt-dependencies . ("base")) (search-terms . #hasheq((author:mflatt@racket-lang.org . #t) (author:mflattÎ»e2040ba . #t) (main-distribution . #t) (ring:0 . #t))) (source . "git://github.com/racket/parser-tools/?path=parser-tools-lib") (tags . ("main-distribution")) (versions . #hash((default . #hasheq((checksum . "1fe9d2d3f30302a744914d14f33683d9f8fd41bc") (source . "git://github.com/racket/parser-tools/?path=parser-tools-lib") (source_url . "git://github.com/racket/parser-tools/?path=parser-tools-lib"))))))