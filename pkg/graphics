#hasheq((author . "juzhenliang@gmail.com") (authors . ("juzhenliang@gmail.com")) (build . #hash((conflicts-log . #f) (dep-failure-log . #f) (docs . (("none" "png") ("none" "colorspace") ("none" "bitmap"))) (failure-log . #f) (min-failure-log . #f) (success-log . "server/built/install/graphics.txt") (test-failure-log . #f) (test-success-log . "server/built/test-success/graphics.txt"))) (checksum . "e4632591f6472caef0aeed3e4bd8cf7c5a3d4fdc") (checksum-error . #f) (collection . (multi)) (conflicts . ()) (dependencies . ("base" "digimon" "math-lib" "draw-lib" "typed-racket-lib" "typed-racket-more" "scribble-lib" "racket-doc" "typed-racket-doc" "digimon")) (description . "Essential computer graphics for Typed Racket") (implies . ()) (license . #f) (modules . ((lib "geofun/digitama/unsafe/dc/text-layout.rkt") (lib "geofun/digitama/unsafe/stream/pdf.rkt") (lib "bitmap/digitama/unsafe/adjust.rkt") (lib "geofun/tamer/track.rkt") (lib "bitmap/base.rkt") (lib "geofun/stroke.rkt") (lib "png/digitama/chunk.rkt") (lib "geofun/digitama/geometry/bbox.rkt") (lib "geofun/digitama/layer/position.rkt") (lib "geofun/digitama/unsafe/typed/c.rkt") (lib "geofun/tamer/resize.rkt") (lib "geofun/digitama/unsafe/dc/icosahedron.rkt") (lib "bitmap/tamer/resize.rkt") (lib "bitmap/stdio.rkt") (lib "geofun/digitama/unsafe/frame.rkt") (lib "geofun/digitama/dc/composite.rkt") (lib "geofun/vector.rkt") (lib "geofun/digitama/dc/text.rkt") (lib "geofun/tamer/raster.rkt") (lib "colorspace/correction.rkt") (lib "bitmap/digitama/dc/plain.rkt") (lib "geofun/main.rkt") (lib "colorspace/tamer/colorspace.scrbl") (lib "bitmap/digitama/unsafe/bitmap.rkt") (lib "geofun/digitama/geometry/polygon/triangle.rkt") (lib "geofun/tamer/composite/pin.rkt") (lib "bitmap/digitama/misc.rkt") (lib "bitmap/effect.rkt") (lib "bitmap/tamer/grayscale.rkt") (lib "bitmap/tamer/zero.rkt") (lib "geofun/digitama/dc/gear.rkt") (lib "bitmap/tamer/composite/heap.rkt") (lib "geofun/digitama/freeze.rkt") (lib "bitmap/digitama/parser/exn.rkt") (lib "png/tamer/schaik/zlib.rkt") (lib "diafun/digitama/unsafe/memory.rkt") (lib "geofun/tamer/pangocairo/curve.rkt") (lib "png/tamer/hexdump.rkt") (lib "geofun/digitama/paint.rkt") (lib "diafun/memory.rkt") (lib "bitmap/digitama/stdio.rkt") (lib "png/digitama/huffman.rkt") (lib "bitmap/invalid.rkt") (lib "geofun/digitama/dc/polygon/hexagon.rkt") (lib "geofun/digitama/geometry/affine.rkt") (lib "geofun/digitama/unsafe/dc/more.rkt") (lib "geofun/digitama/unsafe/stream/png.rkt") (lib "geofun/digitama/base.rkt") (lib "geofun/digitama/geometry/ink.rkt") (lib "bitmap/tamer/composite/table.rkt") (lib "png/digitama/stdin.rkt") (lib "geofun/digitama/unsafe/paint.rkt") (lib "diafun/digitama/memory/interface.rkt") (lib "diafun/digitama/flowchart/identifier.rkt") (lib "bitmap/digitama/unsafe/image.rkt") (lib "geofun/digitama/unsafe/stream/image.rkt") (lib "bitmap/tamer/misc.scrbl") (lib "geofun/digitama/dc/polygon/quadrilateral.rkt") (lib "diafun/digitama/flowchart/interface.rkt") (lib "geofun/digitama/color.rkt") (lib "geofun/tamer/composite/table/color.rkt") (lib "bitmap/digitama/unsafe/pixman.rkt") (lib "geofun/digitama/geometry/polygon/pentagon.rkt") (lib "diafun/digitama/edge/style.rkt") (lib "bitmap/digitama/dc/polygon.rkt") (lib "geofun/tamer/pangocairo/image.rkt") (lib "geofun/digitama/dc/projection.rkt") (lib "geofun/tamer/arrow.rkt") (lib "geofun/village/wisemon/phony/save-as.rkt") (lib "diafun/flowchart.rkt") (lib "bitmap/tamer/composite/pyramid.rkt") (lib "geofun/digitama/geometry/radius.rkt") (lib "geofun/digitama/dc/polygon.rkt") (lib "geofun/digitama/pattern.rkt") (lib "bitmap/digitama/dc/fmap.rkt") (lib "geofun/digitama/geometry/trail.rkt") (lib "geofun/path.rkt") (lib "geofun/digitama/unsafe/composite.rkt") (lib "geofun/digitama/dc/line.rkt") (lib "bitmap/tamer/polygon/parallelogram.rkt") (lib "png/digitama/interlace.rkt") (lib "bitmap/digitama/dc/gear.rkt") (lib "mathfun/position.rkt") (lib "geofun/digitama/layer/sticker.rkt") (lib "bitmap/digitama/parser/number.rkt") (lib "geofun/font.rkt") (lib "diafun/village/nanomon/shell/snap.rkt") (lib "png/digitama/enum.rkt") (lib "png/digitama/png.rkt") (lib "bitmap/tamer/bitmap/bridge/font.rkt") (lib "diafun/digitama/node/style.rkt") (lib "geofun/digitama/unsafe/surface/abstract.rkt") (lib "geofun/tamer/composite/group.rkt") (lib "geofun/digitama/geometry/polygon/quadrilateral.rkt") (lib "colorspace/digitama/hsb.rkt") (lib "bitmap/tamer/rotation.rkt") (lib "geofun/tamer/pangocairo/gradient.rkt") (lib "diafun/digitama/unsafe/edge.rkt") (lib "geofun/digitama/unsafe/typed/cairo.rkt") (lib "geofun/digitama/geometry/polygon/arrow.rkt") (lib "geofun/tamer/nitty-gritty.rkt") (lib "png/base.rkt") (lib "colorspace/main.rkt") (lib "geofun/digitama/unsafe/stream/vector.rkt") (lib "geofun/digitama/dc/resize.rkt") (lib "bitmap/tamer/density.rkt") (lib "geofun/tamer/save.rkt") (lib "geofun/digitama/unsafe/dc/plain.rkt") (lib "diafun/digitama/edge/refine.rkt") (lib "diafun/digitama/edge/tip.rkt") (lib "bitmap/digitama/dc/shape.rkt") (lib "diafun/tamer/repl.rkt") (lib "diafun/digitama/flowchart/self.rkt") (lib "geofun/digitama/source.rkt") (lib "geofun/tamer/pangocairo/misc.rkt") (lib "geofun/digitama/geometry/anchor.rkt") (lib "geofun/tamer/polyline.rkt") (lib "png/digitama/filtering.rkt") (lib "diafun/tamer/memory/memory.rkt") (lib "geofun/digitama/convert.rkt") (lib "geofun/digitama/unsafe/surface/image.rkt") (lib "geofun/digitama/unsafe/cairo.rkt") (lib "geofun/composite.rkt") (lib "geofun/tamer/pangocairo/extent.rkt") (lib "geofun/digitama/unsafe/stream/svg.rkt") (lib "geofun/digitama/geometry/computation/line.rkt") (lib "geofun/digitama/unsafe/dc/shape.rkt") (lib "geofun/digitama/dc/arc.rkt") (lib "geofun/tamer/pangocairo/pango.rkt") (lib "geofun/digitama/unsafe/typed/pango.rkt") (lib "diafun/digitama/memory/style.rkt") (lib "diafun/digitama/node/dc.rkt") (lib "diafun/digitama/memory/exec.rkt") (lib "bitmap/digitama/unsafe/effect.rkt") (lib "geofun/color.rkt") (lib "geofun/digitama/parameter/pdf.rkt") (lib "diafun/digitama/memory/variable.rkt") (lib "bitmap/tamer/invalid.rkt") (lib "geofun/digitama/unsafe/dc/gear.rkt") (lib "bitmap/tamer/font.scrbl") (lib "bitmap/digitama/convert.rkt") (lib "diafun/digitama/flowchart/node.rkt") (lib "bitmap/main.rkt") (lib "geofun/digitama/avatar/bacteriophage.rkt") (lib "colorspace/digitama/spectrum.rkt") (lib "geofun/tamer/composite/table/font.rkt") (lib "geofun/digitama/geometry/footprint.rkt") (lib "colorspace/cie.rkt") (lib "bitmap/digitama/parser/stream.rkt") (lib "diafun/digitama/edge/arrow.rkt") (lib "colorspace/tamer/cie.rkt") (lib "bitmap/resize.rkt") (lib "geofun/digitama/dc/more.rkt") (lib "geofun/digitama/geometry/constants.rkt") (lib "geofun/digitama/layer/combine.rkt") (lib "geofun/digitama/misc.rkt") (lib "geofun/tamer/polygon.rkt") (lib "bitmap/digitama/dc/more.rkt") (lib "png/digitama/crc.rkt") (lib "geofun/tamer/pangocairo/pattern-filter.rkt") (lib "geofun/version.rkt") (lib "geofun/tamer/rotation.rkt") (lib "geofun/digitama/geometry/polygon/hexagon.rkt") (lib "geofun/digitama/unsafe/visual.rkt") (lib "geofun/tamer/font.rkt") (lib "geofun/resize.rkt") (lib "geofun/digitama/dc/rect.rkt") (lib "geofun/digitama/stroke.rkt") (lib "diafun/digitama/memory/dc.rkt") (lib "geofun/village/wisemon/save.rkt") (lib "diafun/digitama/memory/self.rkt") (lib "geofun/digitama/unsafe/dc/path.rkt") (lib "geofun/digitama/layer/find.rkt") (lib "geofun/bitmap.rkt") (lib "geofun/digitama/layer/table.rkt") (lib "diafun/digitama/edge/dc.rkt") (lib "geofun/tamer/flomap.rkt") (lib "diafun/digitama/edge/metrics.rkt") (lib "geofun/digitama/unsafe/adjust.rkt") (lib "bitmap/misc.rkt") (lib "geofun/digitama/dc/polygon/pentagon.rkt") (lib "geofun/digitama/dc/arrow.rkt") (lib "geofun/digitama/font.rkt") (lib "bitmap/tamer/composite/operator.rkt") (lib "colorspace/hsb.rkt") (lib "bitmap/composite.rkt") (lib "bitmap/tamer/polygon/regular.rkt") (lib "colorspace/misc.rkt") (lib "png/tamer/png.scrbl") (lib "diafun/digitama/flowchart/style.rkt") (lib "bitmap/tamer/bitmap.scrbl") (lib "geofun/digitama/unsafe/source.rkt") (lib "geofun/projection.rkt") (lib "geofun/digitama/layer/type.rkt") (lib "geofun/digitama/resize.rkt") (lib "diafun/main.rkt") (lib "geofun/digitama/schematic/procedure.rkt") (lib "geofun/digitama/geometry/dot.rkt") (lib "bitmap/pixel.rkt") (lib "geofun/digitama/dc/raster.rkt") (lib "bitmap/projection.rkt") (lib "geofun/tamer/pangocairo/mesh.rkt") (lib "bitmap/tamer/composite/pin.rkt") (lib "geofun/digitama/composite.rkt") (lib "geofun/digitama/unsafe/typed/more.rkt") (lib "colorspace/tamer/hsb.rkt") (lib "geofun/paint.rkt") (lib "geofun/tamer/composite/table/hue.rkt") (lib "bitmap/digitama/unsafe/invalid.rkt") (lib "geofun/tamer/pangocairo/rectangle.rkt") (lib "geofun/digitama/unsafe/font.rkt") (lib "png/digitama/zlib.rkt") (lib "geofun/digitama/dc/plain.rkt") (lib "diafun/digitama/shared.rkt") (lib "bitmap/tamer/polygon/arrow.rkt") (lib "bitmap/tamer/cellophane.rkt") (lib "bitmap/digitama/unsafe/composite.rkt") (lib "geofun/digitama/dc/path.rkt") (lib "diafun/digitama/edge/label.rkt") (lib "bitmap/digitama/dc/text.rkt") (lib "bitmap/tamer/chess.rkt") (lib "geofun/digitama/unsafe/pango.rkt") (lib "colorspace/tamer/locus.rkt") (lib "diafun/digitama/memory/identifier.rkt") (lib "geofun/tamer/composite/operator.rkt") (lib "geofun/tamer/pangocairo/clip.rkt") (lib "diafun/digitama/flowchart/stick.rkt") (lib "bitmap/constructor.rkt") (lib "bitmap/tamer/composite/group.rkt") (lib "geofun/digitama/unsafe/stream/writer.rkt") (lib "geofun/tamer/composite/table/table.rkt") (lib "geofun/constructor.rkt") (lib "bitmap/tamer/color.scrbl"))) (name . "graphics") (readme-url . #f) (ring . 1) (rt-dependencies . ("base" "digimon" "math-lib" "draw-lib" "typed-racket-lib" "typed-racket-more")) (search-terms . #hasheq((:build-success: . #t) (:docs-error: . #t) (author:juzhenliang@gmail.com . #t) (author:juzhenliangÎ»b3710bd . #t) (colorspace . #t) (graphics . #t) (ring:1 . #t) (typed-racket . #t) (unstable . #t))) (source . "http://github.com/wargrey/graphics/tree/master") (tags . ("colorspace" "graphics" "typed-racket" "unstable")) (versions . #hash((default . #hasheq((checksum . "e4632591f6472caef0aeed3e4bd8cf7c5a3d4fdc") (source . "git://github.com/wargrey/graphics") (source_url . "http://github.com/wargrey/graphics/tree/master"))))))