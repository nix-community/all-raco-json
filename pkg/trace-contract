#hasheq((author . "camoy@ccs.neu.edu") (authors . ("camoy@ccs.neu.edu")) (build . #hash((conflicts-log . #f) (dep-failure-log . #f) (docs . (("main" "trace-contract" "doc/trace-contract@trace-contract/index.html"))) (failure-log . #f) (min-failure-log . #f) (success-log . "server/built/install/trace-contract.txt") (test-failure-log . #f) (test-success-log . "server/built/test-success/trace-contract.txt"))) (checksum . "a3bb010fbeb9d3ecf8c700d376d1640362ae37f9") (checksum-error . #f) (collection . "trace-contract") (conflicts . ()) (date-added . 1734452597) (dependencies . ("automata-lib" "contract-etc-lib" "data-lib" "graph-lib" "redex-etc" "redex-lib" "redex-pict-lib" "stream-etc" "base" "trace-contract-lib" "rackunit-lib" "chk-lib" "racket-doc" "sandbox-lib" "scribble-lib")) (description . "") (implies . ("trace-contract-lib")) (license . #f) (modules . ((lib "trace-contract/example/factory-shared.rkt") (lib "trace-contract/example/shared.rkt") (lib "trace-contract/example/free.rkt") (lib "trace-contract/example/nested.rkt") (lib "trace-contract/example/increment.rkt") (lib "trace-contract/example/bank.rkt") (lib "trace-contract/model/compiler.rkt") (lib "trace-contract/example/indy-ignore.rkt") (lib "trace-contract/example/factory.rkt") (lib "trace-contract/example/suspect.rkt") (lib "trace-contract/test/trace-contract-macro.rkt") (lib "trace-contract/example/util/test.rkt") (lib "trace-contract/test/util.rkt") (lib "trace-contract/test/decl.rkt") (lib "trace-contract/example/monotone.rkt") (lib "trace-contract/model/syntax.rkt") (lib "trace-contract/example/step.rkt") (lib "trace-contract/example/combine.rkt") (lib "trace-contract/example/fold.rkt") (lib "trace-contract/example/merge.rkt") (lib "trace-contract/example/partial-order.rkt") (lib "trace-contract/example/explain.rkt") (lib "trace-contract/example/global-fold.rkt") (lib "trace-contract/example/bank-oo.rkt") (lib "trace-contract/example/string.rkt") (lib "trace-contract/test/attribute-contract.rkt") (lib "trace-contract/example/reset.rkt") (lib "trace-contract/example/increase.rkt") (lib "trace-contract/example/injective.rkt") (lib "trace-contract/example/lock.rkt") (lib "trace-contract/example/util/red-black-tree.rkt") (lib "trace-contract/example/mutable-key.rkt") (lib "trace-contract/model/semantics.rkt") (lib "trace-contract/example/all.rkt") (lib "trace-contract/example/concurrent.rkt") (lib "trace-contract/example/has-next.rkt") (lib "trace-contract/example/multi-blame.rkt") (lib "trace-contract/example/files.rkt") (lib "trace-contract/example/take5.rkt") (lib "trace-contract/model/test.rkt") (lib "trace-contract/scribblings/trace-contract.scrbl") (lib "trace-contract/example/draw.rkt"))) (name . "trace-contract") (readme-url . "https://github.com/camoy/trace-contract/tree/HEAD/README.md") (ring . 2) (rt-dependencies . ("automata-lib" "contract-etc-lib" "data-lib" "graph-lib" "redex-etc" "redex-lib" "redex-pict-lib" "stream-etc" "base" "trace-contract-lib")) (search-terms . #hasheq((:build-success: . #t) (:docs: . #t) (:no-desc: . #t) (:no-tag: . #t) (author:camoy@ccs.neu.edu . #t) (author:camoyÎ»201328c . #t) (ring:2 . #t))) (source . "https://github.com/camoy/trace-contract.git?path=trace-contract") (tags . ()) (versions . #hash((default . #hasheq((checksum . "a3bb010fbeb9d3ecf8c700d376d1640362ae37f9") (source . "https://github.com/camoy/trace-contract.git?path=trace-contract") (source_url . "https://github.com/camoy/trace-contract.git?path=trace-contract"))))))