#hash((author . "jay@racket-lang.org") (authors . ("jay@racket-lang.org")) (build . #hash((conflicts-log . #f) (dep-failure-log . #f) (docs . ()) (failure-log . #f) (min-failure-log . #f) (success-log . "server/built/install/drdr2.txt") (test-failure-log . #f) (test-success-log . "server/built/test-success/drdr2.txt"))) (checksum . "680818e5cfa7d48de02bf1a027f78d766498a48d") (checksum-error . #f) (collection . "drdr2") (conflicts . ()) (dependencies . ("base" "compatibility-lib" "sandbox-lib" "eli-tester")) (description . "Prototype replacement for DrDr") (implies . ()) (license . #f) (modules . ((lib "drdr2/tests/db.rkt") (lib "drdr2/renderer/renderer.rkt") (lib "drdr2/slave/slave.rkt") (lib "drdr2/tests/slave.rkt") (lib "drdr2/scheduler/scheduler.rkt") (lib "drdr2/tests/pqueue.rkt") (lib "drdr2/master/master.rkt") (lib "drdr2/analyzer/analyzer.rkt") (lib "drdr2/monitor/monitor.rkt") (lib "drdr2/monitor/scm.rkt") (lib "drdr2/lib/pqueue.rkt") (lib "drdr2/lib/scm.rkt") (lib "drdr2/lib/db.rkt"))) (name . "drdr2") (ring . 1) (rt-dependencies . ("base" "compatibility-lib" "sandbox-lib")) (search-terms . #hasheq((:build-success: . #t) (:no-tag: . #t) (author:jay@racket-lang.org . #t) (ring:1 . #t))) (source . "http://github.com/racket/drdr2/tree/master") (tags . ()) (versions . #hash((default . #hasheq((checksum . "680818e5cfa7d48de02bf1a027f78d766498a48d") (source . "git://github.com/racket/drdr2") (source_url . "http://github.com/racket/drdr2/tree/master"))))))