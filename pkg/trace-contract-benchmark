#hasheq((author . "camoy@ccs.neu.edu") (authors . ("camoy@ccs.neu.edu")) (build . #hash((conflicts-log . #f) (dep-failure-log . #f) (docs . ()) (failure-log . #f) (min-failure-log . #f) (success-log . "server/built/install/trace-contract-benchmark.txt") (test-failure-log . "server/built/test-fail/trace-contract-benchmark.txt") (test-success-log . #f))) (checksum . "a3bb010fbeb9d3ecf8c700d376d1640362ae37f9") (checksum-error . #f) (collection . "trace-contract") (conflicts . ()) (date-added . 1734452575) (dependencies . ("data-frame" "sawzall-lib" "scribble-abbrevs" "threading-lib" "whereis" "syntax-sloc" "automata-lib" "base" "contract-etc-lib" "data-lib" "draw-lib" "gui-lib" "htdp-lib" "math-lib" "pict-lib" "plot-gui-lib" "plot-lib" "r6rs-lib" "rackunit-lib" "redex-etc" "redex-lib" "scribble-lib" "stream-etc" "trace-contract-lib" "at-exp-lib" "rackunit-typed")) (description . "") (implies . ()) (license . #f) (modules . ((lib "trace-contract/dataflow/interface.rkt") (lib "trace-contract/ticket/admin/manager.rkt") (lib "trace-contract/util/benchmark.rkt") (lib "trace-contract/util/modifier/gui/gtk-canvas.rkt") (lib "trace-contract/tetris/elim.rkt") (lib "trace-contract/ticket/player/astrategy.rkt") (lib "trace-contract/lnm/bitstring.rkt") (lib "trace-contract/lnm/base/untyped.rkt") (lib "trace-contract/ticket/lib/get-data-url.rkt") (lib "trace-contract/util/refresh-bytecode.rkt") (lib "trace-contract/util/deps/swdev/Lib/json-equal.rkt") (lib "trace-contract/util/modifier/typed-racket-more/draw.rkt") (lib "trace-contract/util/deps/swdev/Lib/or.rkt") (lib "trace-contract/future/lib/private/graph-drawing.rkt") (lib "trace-contract/ticket/main.rkt") (lib "trace-contract/util/modifier/draw/support/pen.rkt") (lib "trace-contract/ticket/player/player.rkt") (lib "trace-contract/future/lib/trace.rkt") (lib "trace-contract/fish/admin/prepare-games.rkt") (lib "trace-contract/fish/lib/suspension.rkt") (lib "trace-contract/jpeg/bit-ports.rkt") (lib "trace-contract/dataflow/lfp.rkt") (lib "trace-contract/util/deps/swdev/Lib/hash-contract.rkt") (lib "trace-contract/jpeg/untyped.rkt") (lib "trace-contract/ticket/admin/state.rkt") (lib "trace-contract/future/main.rkt") (lib "trace-contract/jpeg/exif.rkt") (lib "trace-contract/util/deps/swdev/Contracts/unique.rkt") (lib "trace-contract/dataflow/constant-propagation.rkt") (lib "trace-contract/tetris/tetras.rkt") (lib "trace-contract/util/tabulate.rkt") (lib "trace-contract/util/deps/swdev/Lib/should-be-racket.rkt") (lib "trace-contract/util/deps/swdev/Lib/list-private.rkt") (lib "trace-contract/util/modifier/draw/support/bitmap.rkt") (lib "trace-contract/jpeg/jfif.rkt") (lib "trace-contract/dataflow/main.rkt") (lib "trace-contract/fish/admin/manager.rkt") (lib "trace-contract/dataflow/reduction.rkt") (lib "trace-contract/lnm/main.rkt") (lib "trace-contract/util/modifier/draw/support/brush.rkt") (lib "trace-contract/fish/data/make-history.rkt") (lib "trace-contract/dungeon/utils.rkt") (lib "trace-contract/util/deps/swdev/Lib/pattern-matching.rkt") (lib "trace-contract/ticket/player/buy-now-strategy.rkt") (lib "trace-contract/ticket/admin/prepare-games.rkt") (lib "trace-contract/ticket/common/map.rkt") (lib "trace-contract/tetris/main.rkt") (lib "trace-contract/lnm/summary.rkt") (lib "trace-contract/ticket/admin/referee.rkt") (lib "trace-contract/tetris/visual.rkt") (lib "trace-contract/tetris/data.rkt") (lib "trace-contract/util/deps/swdev/Testing/harness.rkt") (lib "trace-contract/util/deps/swdev/Style/ll-style.rkt") (lib "trace-contract/fish/lib/hexagon.rkt") (lib "trace-contract/util/deps/swdev/Testing/check-values.rkt") (lib "trace-contract/util/deps/swdev/main.rkt") (lib "trace-contract/lnm/modulegraph.rkt") (lib "trace-contract/future/lib/private/visualizer-drawing.rkt") (lib "trace-contract/fish/player/player.rkt") (lib "trace-contract/util/modifier/gui/cocoa-canvas.rkt") (lib "trace-contract/util/deps/swdev/Debugging/diff.rkt") (lib "trace-contract/fish/common/game-state.rkt") (lib "trace-contract/ticket/player/istrategy.rkt") (lib "trace-contract/future/lib/private/drawing-helpers.rkt") (lib "trace-contract/fish/lib/xsend.rkt") (lib "trace-contract/fish/lib/toint.rkt") (lib "trace-contract/util/deps/swdev/Testing/port-objects.rkt") (lib "trace-contract/dungeon/grid.rkt") (lib "trace-contract/future/lib/private/display.rkt") (lib "trace-contract/util/measure.rkt") (lib "trace-contract/lnm/spreadsheet.rkt") (lib "trace-contract/util/deps/swdev/Testing/communication.rkt") (lib "trace-contract/dataflow/order.rkt") (lib "trace-contract/ticket/common/player-interface.rkt") (lib "trace-contract/util/deps/swdev/Lib/enumeration.rkt") (lib "trace-contract/util/deps/swdev/Testing/testing.rkt") (lib "trace-contract/util/deps/swdev/Debugging/spy.rkt") (lib "trace-contract/future/lib/private/visualizer-data.rkt") (lib "trace-contract/util/modifier/draw/support/main.rkt") (lib "trace-contract/fish/common/internal-player.rkt") (lib "trace-contract/fish/lib/list.rkt") (lib "trace-contract/util/deps/swdev/Lib/list.rkt") (lib "trace-contract/fish/player/strategy-interface.rkt") (lib "trace-contract/tetris/block.rkt") (lib "trace-contract/util/sloc.rkt") (lib "trace-contract/dungeon/message-queue.rkt") (lib "trace-contract/jpeg/huffman.rkt") (lib "trace-contract/fish/main.rkt") (lib "trace-contract/ticket/player/hold-10-strategy.rkt") (lib "trace-contract/tetris/world.rkt") (lib "trace-contract/dataflow/monotone.rkt") (lib "trace-contract/util/constants.rkt") (lib "trace-contract/dataflow/while-class.rkt") (lib "trace-contract/ticket/lib/list.rkt") (lib "trace-contract/dungeon/cell.rkt") (lib "trace-contract/tetris/consts.rkt") (lib "trace-contract/ticket/lib/get-image-from-url.rkt") (lib "trace-contract/util/deps/swdev/Testing/make-client.rkt") (lib "trace-contract/ticket/lib/xsend.rkt") (lib "trace-contract/ticket/common/referee-interface.rkt") (lib "trace-contract/util/deps/swdev/Lib/json-pretty.rkt") (lib "trace-contract/ticket/common/connection.rkt") (lib "trace-contract/fish/lib/pict-hexagon.rkt") (lib "trace-contract/fish/common/player-interface.rkt") (lib "trace-contract/fish/common/referee-interface.rkt") (lib "trace-contract/tetris/aux.rkt") (lib "trace-contract/fish/common/fish.rkt") (lib "trace-contract/util/modifier/draw/main.rkt") (lib "trace-contract/fish/common/penguin.rkt") (lib "trace-contract/tetris/bset.rkt") (lib "trace-contract/memory/main.rkt") (lib "trace-contract/ticket/common/basic-constants.rkt") (lib "trace-contract/util/modifier/draw/support/cache.rkt") (lib "trace-contract/future/lib/main.rkt") (lib "trace-contract/util/deps/swdev/Lib/matrix.rkt") (lib "trace-contract/dataflow/while.rkt") (lib "trace-contract/util/deps/swdev/Lib/pict-plus.rkt") (lib "trace-contract/fish/common/rules.rkt") (lib "trace-contract/ticket/common/state.rkt") (lib "trace-contract/fish/lib/struct-accessor.rkt") (lib "trace-contract/lnm/lnm-plot.rkt") (lib "trace-contract/jpeg/main.rkt") (lib "trace-contract/ticket/player/cheat-strategy.rkt") (lib "trace-contract/future/lib/private/constants.rkt") (lib "trace-contract/ticket/common/map-serialize.rkt") (lib "trace-contract/dungeon/main.rkt") (lib "trace-contract/dungeon/un-types.rkt") (lib "trace-contract/fish/player/greedy.rkt") (lib "trace-contract/util/deps/swdev/Lib/matrix-2d.rkt") (lib "trace-contract/fish/admin/referee.rkt") (lib "trace-contract/util/modifier/draw/support/dc-intf.rkt") (lib "trace-contract/fish/common/board.rkt") (lib "trace-contract/util/deps/swdev/Testing/tcp.rkt"))) (name . "trace-contract-benchmark") (readme-url . "https://github.com/camoy/trace-contract/tree/HEAD/README.md") (ring . 2) (rt-dependencies . ("data-frame" "sawzall-lib" "scribble-abbrevs" "threading-lib" "whereis" "syntax-sloc" "automata-lib" "base" "contract-etc-lib" "data-lib" "draw-lib" "gui-lib" "htdp-lib" "math-lib" "pict-lib" "plot-gui-lib" "plot-lib" "r6rs-lib" "rackunit-lib" "redex-etc" "redex-lib" "scribble-lib" "stream-etc" "trace-contract-lib")) (search-terms . #hasheq((:build-success: . #t) (:no-desc: . #t) (:no-tag: . #t) (author:camoy@ccs.neu.edu . #t) (author:camoyÎ»201328c . #t) (ring:2 . #t))) (source . "https://github.com/camoy/trace-contract.git?path=trace-contract-benchmark") (tags . ()) (versions . #hash((default . #hasheq((checksum . "a3bb010fbeb9d3ecf8c700d376d1640362ae37f9") (source . "https://github.com/camoy/trace-contract.git?path=trace-contract-benchmark") (source_url . "https://github.com/camoy/trace-contract.git?path=trace-contract-benchmark"))))))