#hasheq((author . "jay.mccarthy@gmail.com") (authors . ("jay.mccarthy@gmail.com")) (build . #hash((conflicts-log . #f) (dep-failure-log . #f) (docs . (("main" "opencl" "doc/opencl@opencl/index.html"))) (failure-log . #f) (min-failure-log . "server/built/min-fail/opencl.txt") (success-log . "server/built/install/opencl.txt") (test-failure-log . "server/built/test-fail/opencl.txt") (test-success-log . #f))) (checksum . "f984050b0c02beb6df186d1d531c4a92a98df1a1") (checksum-error . #f) (collection . (multi)) (conflicts . ()) (dependencies . ("base" "scribble-lib" "superc" "at-exp-lib" "racket-doc")) (description . "A Racket interface to OpenCL using an FFI") (implies . ()) (license . #f) (modules . ((lib "opencl/c/5-8.rkt") (lib "opencl/c/syntax.rkt") (lib "tests/opencl/samples/nvidiaSamples/oclMatVecMul/oclMatVecMul.rkt") (lib "tests/opencl/examples/vmult/racket-list.rkt") (lib "opencl/c/5-4.rkt") (lib "opencl/c/5-5.rkt") (lib "opencl/c.rkt") (lib "tests/opencl/samples/nvidiaSamples/oclDeviceQuery/oclDeviceQuery.rkt") (lib "tests/opencl/samples/nvidiaSamples/oclVectorAdd/oclVectorAdd.rkt") (lib "opencl/c/include/cl.rkt") (lib "tests/opencl/examples/pps/scan.rkt") (lib "opencl/scribblings/opencl.scrbl") (lib "tests/opencl/examples/matrix-transpose/transpose.rkt") (lib "tests/opencl/samples/atiSamples/Template/Template.rkt") (lib "opencl/c/5-1.rkt") (lib "tests/opencl/examples/vmult/make-data.rkt") (lib "tests/opencl/samples/atiSamples/BitonicSort/BitonicSort.rkt") (lib "tests/opencl/samples/atiSamples/FastWalshTransform/FastWalshTransform.rkt") (lib "opencl/c/5-9.rkt") (lib "tests/opencl/samples/atiSamples/BinarySearch/BinarySearch.rkt") (lib "opencl/c/types.rkt") (lib "opencl/c/5-7.rkt") (lib "tests/opencl/samples/atiSamples/EigenValue/EigenValue.rkt") (lib "opencl/c/5-2.rkt") (lib "tests/opencl/samples/nvidiaSamples/oclDotProduct/oclDotProduct.rkt") (lib "opencl/c/include/extract-defines.rkt") (lib "opencl/scribblings/c.scrbl") (lib "tests/opencl/samples/atiSamples/MatrixTranspose/MatrixTranspose.rkt") (lib "opencl/c/4-1.rkt") (lib "tests/opencl/samples/nvidiaSamples/oclTranspose/oclTranspose.rkt") (lib "tests/opencl/samples/atiSamples/FloydWarshall/FloydWarshall.rkt") (lib "opencl/c/4-2.rkt") (lib "opencl/c/4.rkt") (lib "opencl/c/5-6.rkt") (lib "opencl/scribblings/c/5.scrbl") (lib "tests/opencl/samples/nvidiaSamples/oclBandwidthTest/oclBandwidthTest.rkt") (lib "tests/opencl/samples/atiSamples/BinomialOption/BinomialOption.rkt") (lib "opencl/racket.rkt") (lib "opencl/c/5.rkt") (lib "tests/opencl/examples/vmult/c-kernel.rkt") (lib "opencl/c/5-10.rkt") (lib "opencl/c/lib.rkt") (lib "tests/opencl/examples/vmult/opencl.rkt") (lib "tests/opencl/test.rkt") (lib "tests/opencl/examples/vmult/racket-vector.rkt") (lib "opencl/scribblings/c/types.scrbl") (lib "opencl/scribblings/c/4.scrbl") (lib "opencl/c/5-3.rkt") (lib "tests/opencl/samples/nvidiaSamples/utils/utils.rkt") (lib "tests/opencl/samples/atiSamples/MatrixMultiplication/MatrixMultiplication.rkt") (lib "tests/opencl/samples/atiSamples/DwtHaar1D/DwtHaar1D.rkt") (lib "opencl/c/constants.rkt") (lib "opencl/c/4-3.rkt") (lib "tests/opencl/examples/vmult/racket-unsafe-vector.rkt") (lib "tests/opencl/samples/atiSamples/BlackScholes/BlackScholes.rkt") (lib "tests/opencl/examples/vmult/c-loop.rkt") (lib "tests/opencl/samples/atiSamples/atiUtils/utils.rkt") (lib "opencl/c/tsyntax.rkt") (lib "opencl/c/util.rkt"))) (name . "opencl") (ring . 1) (rt-dependencies . ("base" "scribble-lib" "superc")) (search-terms . #hasheq((|| . #t) (:build-success: . #t) (:docs: . #t) (author:jay.mccarthy@gmail.com . #t) (author:jay.mccarthyÎ»66ce27c . #t) (ffi . #t) (parallel . #t) (ring:1 . #t))) (source . "http://github.com/jeapostrophe/opencl/tree/master") (tags . ("" "ffi" "parallel")) (versions . #hash((default . #hasheq((checksum . "f984050b0c02beb6df186d1d531c4a92a98df1a1") (source . "github://github.com/jeapostrophe/opencl/master") (source_url . "http://github.com/jeapostrophe/opencl/tree/master"))))))