#hasheq((author . "clements@racket-lang.org") (authors . ("clements@racket-lang.org")) (build . #hash((conflicts-log . #f) (dep-failure-log . #f) (docs . (("main" "rsound" "doc/rsound@rsound/index.html"))) (failure-log . #f) (min-failure-log . #f) (success-log . "server/built/install/rsound.txt") (test-failure-log . "server/built/test-fail/rsound.txt") (test-success-log . #f))) (checksum . "39580725993288d4f8495fd988f3d99e8db60613") (checksum-error . #f) (collection . (multi)) (conflicts . ()) (dependencies . ("portaudio" "base" "data-lib" "gui-lib" "htdp-lib" "math-lib" "plot-lib" "plot-gui-lib" "rackunit-lib" "typed-racket-lib" "drracket-plugin-lib" "memoize" "pict-lib" "wxme-lib" "snip-lib" "scribble-lib" "racket-doc" "wxme-lib")) (description . "A framework for manipulating and playing sounds using the portaudio library. Runs on Windows, Mac OS X, and linux.") (implies . ()) (modules . ((lib "rsound/test/manual-play-stream-latency-test.rkt") (lib "rsound/contrib/cs4hs-lib.rkt") (lib "rsound/test/test-sequencer.rkt") (lib "rsound/rsound-commander.rkt") (lib "rsound/examples/random-tone-example.rkt") (lib "rsound/test/manual-test-big-draw.rkt") (lib "rsound/contrib/bassdrum.rkt") (lib "rsound/define-argcheck.rkt") (lib "rsound/examples/test-audio-filtering.rkt") (lib "rsound/contrib/crush.rkt") (lib "rsound/test/test-envelope.rkt") (lib "rsound/test/test-util.rkt") (lib "rsound/drum-samples.rkt") (lib "rsound/test/manual-playing-signal-block-test.rkt") (lib "rsound/rsound.rkt") (lib "rsound/fsound.rkt") (lib "rsound/test/test-paste-util.rkt") (lib "rsound/private/s16vector-add.rkt") (lib "rsound/test/check-timing.rkt") (lib "rsound/test/check-recording.rkt") (lib "rsound/draw.rkt") (lib "rsound/write-wav.rkt") (lib "rsound/contrib/cs4hs-lab.rkt") (lib "rsound/examples/bach-notes.rkt") (lib "rsound/network.rkt") (lib "rsound/single-cycle.rkt") (lib "rsound/test/manual-test-fft.rkt") (lib "rsound/examples/piano-samples.rkt") (lib "rsound/diagnose.rkt") (lib "rsound/test/check-signal-speed.rkt") (lib "rsound/private/makefile-generate.rkt") (lib "rsound/test/test-network.rkt") (lib "rsound/test/check-math-fft-speed.rkt") (lib "rsound/examples/harmonic-overlay.rkt") (lib "rsound/tool.rkt") (lib "rsound/test/test-single-cycle.rkt") (lib "rsound/contrib/cs4hs-lab.scrbl") (lib "rsound/test/test-rsound-commander.rkt") (lib "rsound/test/check-c-lib-speedup.rkt") (lib "rsound/test/test-write-wav.rkt") (lib "rsound/read-wav.rkt") (lib "rsound/test/manual-playing-test.rkt") (lib "rsound/examples/sub-sampling.rkt") (lib "rsound/test/test-filter.rkt") (lib "rsound/util.rkt") (lib "rsound/stream-play.rkt") (lib "rsound/integral-cycles.rkt") (lib "rsound/test/test-s16vector-add.rkt") (lib "rsound/signals.scrbl") (lib "rsound/examples/markov-model.rkt") (lib "rsound/test/plot-signal.rkt") (lib "rsound/test/test-rsound.rkt") (lib "rsound/frequency-response.rkt") (lib "rsound/contrib/adventure-kid-waveforms.rkt") (lib "rsound/examples/quantize-looper.rkt") (lib "rsound/examples/katy-sliders.rkt") (lib "rsound/sequencer.rkt") (lib "rsound/common.rkt") (lib "rsound/wxme-rsound-snip.rkt") (lib "rsound/piano-tones.rkt") (lib "rsound/filter.rkt") (lib "rsound/envelope.rkt") (lib "rsound/test/manual-draw-test.rkt") (lib "rsound/paste-util.rkt") (lib "rsound/wavetable.rkt") (lib "rsound/reverb.rkt") (lib "rsound/test/manual-test-latency.rkt") (lib "rsound/main.rkt") (lib "rsound/test/test-reverb.rkt") (lib "rsound/test/test-read-wav.rkt") (lib "rsound/examples/gogo.rkt") (lib "rsound/rsound-snip.rkt") (lib "rsound/examples/sequencer-playing-example.rkt") (lib "rsound/test/test-make-tone.rkt") (lib "rsound/looper.rkt") (lib "rsound/test/test-fsound.rkt") (lib "rsound/filter-typed.rkt") (lib "rsound/prefs.rkt") (lib "rsound/test/manual-stream-play-test.rkt") (lib "rsound/contrib/drum-machine.rkt") (lib "rsound/test/interactive-drr-frequency-response.rkt") (lib "rsound/rsound.scrbl") (lib "rsound/test/check-resample-speed.rkt"))) (name . "rsound") (ring . 1) (search-terms . #hasheq((:build-success: . #t) (:docs: . #t) (audio . #t) (author:clements@racket-lang.org . #t) (ffi . #t) (io . #t) (ring:1 . #t))) (source . "http://github.com/jbclements/RSound/tree/master/") (tags . ("audio" "ffi" "io")) (versions . #hash((default . #hasheq((checksum . "4a6d440f382495a7609deb01c458d51e9b7ac990") (source . "github://github.com/jbclements/RSound/master/") (source_url . "http://github.com/jbclements/RSound/tree/master/"))))))