#hasheq((author . "dvanhorn@racket-lang.org") (authors . ("dvanhorn@racket-lang.org")) (build . #hash((conflicts-log . #f) (dep-failure-log . #f) (docs . (("none" "pcf") ("salvage" "redex-to-lang" "doc/redex-to-lang@pcf/index.html"))) (failure-log . "server/built/fail/pcf.txt") (min-failure-log . #f) (success-log . #f) (test-failure-log . #f) (test-success-log . #f))) (checksum . "f04e2ff7f34b89a3dc6c2a70a6a3283f954d3a67") (checksum-error . #f) (collection . (multi)) (conflicts . ()) (dependencies . ("base" "redex-lib" "redex-pict-lib" "unstable-lib" "scribble-lib" "racket-doc" "sandbox-lib" "redex-doc" "scribble-doc")) (description . "PCF with Contracts and Symbolic Values") (implies . ()) (modules . ((lib "pcf/lang.rkt") (lib "tests/cpcf/redex.rkt") (lib "pcf/types.rkt") (lib "spcf/heap/lang/reader.rkt") (lib "pcf/heap/test.rkt") (lib "tests/pcf/redex.rkt") (lib "scpcf/heap/lang/reader.rkt") (lib "scpcf/heap/lang.rkt") (lib "pcf/syntax.rkt") (lib "spcf/heap/semantics.rkt") (lib "spcf/heap/syntax.rkt") (lib "pcf/heap/examples/fact5.rkt") (lib "spcf/types.rkt") (lib "scpcf/syntax.rkt") (lib "scpcf/lang.rkt") (lib "cpcf/heap/lang/reader.rkt") (lib "tests/scpcf/make-tests.rkt") (lib "cpcf/syntax.rkt") (lib "tests/spcf/make-tests.rkt") (lib "spcf/heap/test.rkt") (lib "pcf/source/lang.rkt") (lib "pcf/private/racket-pcf.rkt") (lib "scpcf/examples.rkt") (lib "spcf/semantics.rkt") (lib "pcf/private/return.rkt") (lib "pcf/private/prover.rkt") (lib "scpcf/lang/reader.rkt") (lib "scpcf/redex.rkt") (lib "scribblings/redex-to-lang/redex-to-lang.scrbl") (lib "pcf/heap/lang/reader.rkt") (lib "scpcf/heap/test.rkt") (lib "cpcf/heap/syntax.rkt") (lib "cpcf/heap/test.rkt") (lib "pcf/private/subst.rkt") (lib "spcf/redex.rkt") (lib "spcf/lang/reader.rkt") (lib "scpcf/types.rkt") (lib "cpcf/heap/semantics.rkt") (lib "cpcf/lang/reader.rkt") (lib "spcf/examples.rkt") (lib "scpcf/semantics.rkt") (lib "scribblings/pcf/pcf.scrbl") (lib "pcf/redex.rkt") (lib "pcf/private/make-lang.rkt") (lib "pcf/source.rkt") (lib "pcf/private/label.rkt") (lib "tests/cpcf/make-tests.rkt") (lib "pcf/source/lang/reader.rkt") (lib "pcf/heap/lang.rkt") (lib "cpcf/heap/lang.rkt") (lib "cpcf/lang.rkt") (lib "scpcf/heap/semantics.rkt") (lib "spcf/lang.rkt") (lib "tests/pcf/make-tests.rkt") (lib "cpcf/examples.rkt") (lib "pcf/semantics.rkt") (lib "pcf/private/lexical.rkt") (lib "pcf/heap/semantics.rkt") (lib "cpcf/types.rkt") (lib "scpcf/heap/examples.rkt") (lib "tests/spcf/redex.rkt") (lib "tests/scpcf/redex.rkt") (lib "cpcf/test.rkt") (lib "pcf/test.rkt") (lib "cpcf/redex.rkt") (lib "pcf/examples.rkt") (lib "pcf/lang/reader.rkt") (lib "scpcf/heap/syntax.rkt") (lib "pcf/heap/syntax.rkt") (lib "cpcf/semantics.rkt") (lib "spcf/syntax.rkt") (lib "spcf/heap/lang.rkt"))) (name . "pcf") (ring . 1) (search-terms . #hasheq((:build-fail: . #t) (:docs-error: . #t) (author:dvanhorn@racket-lang.org . #t) (language . #t) (ring:1 . #t))) (source . "http://github.com/dvanhorn/pcf/tree/master/") (tags . ("language")) (versions . #hash((default . #hasheq((checksum . "f04e2ff7f34b89a3dc6c2a70a6a3283f954d3a67") (source . "github://github.com/dvanhorn/pcf/master/") (source_url . "http://github.com/dvanhorn/pcf/tree/master/"))))))