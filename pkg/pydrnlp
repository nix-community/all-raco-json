#hasheq((author . "philip@philipmcgrath.com") (authors . ("philip@philipmcgrath.com")) (build . #hash((conflicts-log . #f) (dep-failure-log . #f) (docs . (("main" "pydrnlp" "doc/pydrnlp@pydrnlp/index.html"))) (failure-log . #f) (min-failure-log . #f) (success-log . "server/built/install/pydrnlp.txt") (test-failure-log . "server/built/test-fail/pydrnlp.txt") (test-success-log . #f))) (checksum . "666c1e00b67c0cc1ee6b5e3fbcfbec498b3173ac") (checksum-error . #f) (collection . "pydrnlp") (conflicts . ()) (date-added . 1569547008) (dependencies . ("base" "ricoeur-kernel" "ricoeur-tei-utils" "adjutor" "python-tokenizer" "math-lib" "pict-lib" "draw-lib" "typed-racket-lib" "typed-racket-more" "reprovide-lang" "db-lib" "sql" "gregor-lib" "scribble-lib" "racket-doc" "rackunit-lib" "markdown" "rackunit-typed" "_-exp" "at-exp-lib" "rackjure")) (description . "NLP Library for Digital Ricoeur") (implies . ()) (modules . ((lib "pydrnlp/word-cloud/pict.rkt") (lib "pydrnlp/word-cloud/old/word-cloud.rkt") (lib "pydrnlp/main.rkt") (lib "pydrnlp/word-cloud/world.rkt") (lib "pydrnlp/scribblings/pydrnlp.scrbl") (lib "pydrnlp/word-cloud/scratch.rkt") (lib "pydrnlp/support.rkt") (lib "pydrnlp/trends/debugging-report.rkt") (lib "pydrnlp/support/conda.rkt") (lib "pydrnlp/support/python-lang/prefabs.rkt") (lib "pydrnlp/support/python-lang/read.rkt") (lib "pydrnlp/py/environment.rkt") (lib "pydrnlp/word-cloud/bspt.rkt") (lib "pydrnlp/word-cloud/test-data.rkt") (lib "pydrnlp/trends/cache-tokenize-corpus.rkt") (lib "pydrnlp/word-cloud/broken-quadtree/word-cloud.rkt") (lib "pydrnlp/trends/worker.rkt") (lib "pydrnlp/word-cloud/stream.rkt") (lib "pydrnlp/support/python-lang/stx.rkt") (lib "pydrnlp/trends/types/rb-tree.rkt") (lib "pydrnlp/trends/corpus.rkt") (lib "pydrnlp/word-cloud/broken-quadtree/pict.rkt") (lib "pydrnlp/support/revision-contract.rkt") (lib "pydrnlp/scribblings/bibliography.rkt") (lib "pydrnlp/scribblings/markdown.rkt") (lib "pydrnlp/scribblings/trends.scrbl") (lib "pydrnlp/scribblings/support.scrbl") (lib "pydrnlp/trends/types.rkt") (lib "pydrnlp/scribblings/bug.rkt") (lib "pydrnlp/support/worker.rkt") (lib "pydrnlp/support/python-lang.rkt") (lib "pydrnlp/py/write-env-vars.rkt") (lib "pydrnlp/trends/tokenize-one-doc.rkt") (lib "pydrnlp/scribblings/lib.rkt") (lib "pydrnlp/trends/analyze.rkt") (lib "pydrnlp/word-cloud/rect.rkt") (lib "pydrnlp/trends/types/lemma-table.rkt") (lib "pydrnlp/trends.rkt") (lib "pydrnlp/word-cloud/old/intersect.rkt") (lib "pydrnlp/trends/test.rkt") (lib "pydrnlp/trends/types/types.rkt") (lib "pydrnlp/word-cloud/old/collision.rkt") (lib "pydrnlp/word-cloud/broken-quadtree/quadtree.rkt") (lib "pydrnlp/scribblings/python-doc-lang.rkt") (lib "pydrnlp/scribblings/include-python.rkt"))) (name . "pydrnlp") (ring . 1) (search-terms . #hasheq((:build-success: . #t) (:docs: . #t) (DigitalRicoeur . #t) (application . #t) (author:philip@philipmcgrath.com . #t) (nlp . #t) (ring:1 . #t))) (source . "https://bitbucket.org/digitalricoeur/pydrnlp.git") (tags . ("application" "DigitalRicoeur" "nlp")) (versions . #hash((default . #hasheq((checksum . "666c1e00b67c0cc1ee6b5e3fbcfbec498b3173ac") (source . "https://bitbucket.org/digitalricoeur/pydrnlp.git") (source_url . "https://bitbucket.org/digitalricoeur/pydrnlp.git"))))))