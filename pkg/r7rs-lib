#hasheq((author . "lexi.lambda@gmail.com") (authors . ("lexi.lambda@gmail.com")) (build . #hash((conflicts-log . #f) (dep-failure-log . #f) (docs . ()) (failure-log . #f) (min-failure-log . #f) (success-log . "server/built/install/r7rs-lib.txt") (test-failure-log . #f) (test-success-log . "server/built/test-success/r7rs-lib.txt"))) (checksum . "84be3d16aab202e08b13da2f0e7c095e03ff0895") (checksum-error . #f) (collection . "r7rs") (conflicts . ()) (date-added . 1646046150) (dependencies . ("base" "compatibility-lib" "r5rs-lib" "r6rs-lib" "rackunit-lib")) (description . "") (implies . ()) (license . #f) (modules . ((lib "r7rs/private/export.rkt") (lib "r7rs/eval.rkt") (lib "r7rs/r5rs.rkt") (lib "r7rs/private/cond-expand.rkt") (lib "r7rs/private/vector.rkt") (lib "r7rs/case-lambda.rkt") (lib "r7rs/private/bytevector.rkt") (lib "r7rs/private/import.rkt") (lib "r7rs/private/mutability.rkt") (lib "r7rs/time.rkt") (lib "r7rs/private/record.rkt") (lib "r7rs/char.rkt") (lib "r7rs/lang/private/string.rkt") (lib "r7rs/private/case.rkt") (lib "r7rs/private/string.rkt") (lib "r7rs/private/exception.rkt") (lib "r7rs/private/strip-prefix.rkt") (lib "r7rs/write.rkt") (lib "r7rs/lang/private/directive.rkt") (lib "r7rs/private/quote.rkt") (lib "r7rs/lazy.rkt") (lib "r7rs/inexact.rkt") (lib "r7rs/private/define-values.rkt") (lib "r7rs/private/math.rkt") (lib "r7rs/load/lang/language.rkt") (lib "r7rs/base.rkt") (lib "r7rs/process-context.rkt") (lib "r7rs/cxr.rkt") (lib "r7rs/load.rkt") (lib "r7rs/main.rkt") (lib "r7rs/private/list.rkt") (lib "r7rs/private/library.rkt") (lib "r7rs/lang/private/symbol.rkt") (lib "r7rs/load/lang/reader.rkt") (lib "r7rs/lang/private/bytevector.rkt") (lib "r7rs/repl.rkt") (lib "r7rs/complex.rkt") (lib "r7rs/lang/private/char.rkt") (lib "r7rs/read.rkt") (lib "r7rs/file.rkt") (lib "r7rs/private/syntax-rules.rkt") (lib "r7rs/lang/reader.rkt"))) (name . "r7rs-lib") (ring . 1) (rt-dependencies . (("base" #:version "8.4.0.8") "compatibility-lib" "r5rs-lib" "r6rs-lib")) (search-terms . #hasheq((:build-success: . #t) (:no-desc: . #t) (:no-tag: . #t) (author:lexi.lambda@gmail.com . #t) (author:lexi.lambdaÎ»81999a1 . #t) (ring:1 . #t))) (source . "https://github.com/lexi-lambda/racket-r7rs.git?path=r7rs-lib#master") (tags . ()) (versions . #hash((default . #hasheq((checksum . "84be3d16aab202e08b13da2f0e7c095e03ff0895") (source . "https://github.com/lexi-lambda/racket-r7rs.git?path=r7rs-lib#master") (source_url . "https://github.com/lexi-lambda/racket-r7rs.git?path=r7rs-lib#master"))))))