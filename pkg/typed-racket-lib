#hash((author . "samth@racket-lang.org stamourv@racket-lang.org") (authors . ("samth@racket-lang.org" "stamourv@racket-lang.org")) (build . #hash((conflicts-log . #f) (dep-failure-log . #f) (docs . ()) (failure-log . #f) (min-failure-log . #f) (success-log . #f) (test-failure-log . #f) (test-success-log . #f))) (checksum . "93f965767adfc37ca3eeaad4549d18104b8edbc6") (checksum-error . #f) (collection . (multi)) (conflicts . ()) (dependencies . ("base" "source-syntax" "pconvert-lib" "compatibility-lib" "string-constants-lib")) (description . "implementation (no documentation) part of \"typed-racket\"") (implies . ()) (license . "(Apache-2.0 OR MIT)") (modules . ((lib "typed-racket/rep/base-type-rep.rkt") (lib "typed-racket/typecheck/tc-if.rkt") (lib "typed-racket/tc-setup.rkt") (lib "typed-racket/utils/promise-not-name-contract.rkt") (lib "typed-racket/infer/infer-unit.rkt") (lib "typed/untyped-utils.rkt") (lib "typed-racket/logic/ineq.rkt") (lib "typed-racket/static-contracts/kinds.rkt") (lib "typed-racket/typecheck/tc-lambda-unit.rkt") (lib "typed-racket/utils/any-wrap.rkt") (lib "typed-racket/utils/struct-type-c.rkt") (lib "typed/racket/class.rkt") (lib "typed-racket/static-contracts/combinators/function.rkt") (lib "typed-racket/base-env/type-name-error.rkt") (lib "typed-racket/typecheck/tc-app/tc-app-lambda.rkt") (lib "typed-racket/env/lexical-env.rkt") (lib "typed-racket/types/current-seen.rkt") (lib "typed-racket/optimizer/sequence.rkt") (lib "typed-racket/env/init-envs.rkt") (lib "typed-racket/static-contracts/combinators.rkt") (lib "typed-racket/env/signature-env.rkt") (lib "typed-racket/static-contracts/combinators/proposition.rkt") (lib "typed-racket/base-env/type-env-lang.rkt") (lib "typed/file/md5.rkt") (lib "typed-racket/base-env/class-prims.rkt") (lib "typed-racket/static-contracts/combinators/derived.rkt") (lib "typed-racket/types/resolve.rkt") (lib "typed/racket/base/optional/lang/reader.rkt") (lib "typed-racket/env/type-env-structs.rkt") (lib "typed-racket/typecheck/tc-app/tc-app-apply.rkt") (lib "typed/racket/base/deep/lang/reader.rkt") (lib "typed-racket/utils/timing.rkt") (lib "typed-racket/infer/dmap.rkt") (lib "typed-racket/typed-reader.rkt") (lib "typed-racket/typecheck/tc-metafunctions.rkt") (lib "typed-racket/static-contracts/terminal.rkt") (lib "typed-racket/utils/print-struct.rkt") (lib "typed-racket/static-contracts/combinators/case-lambda.rkt") (lib "typed-racket/env/row-constraint-env.rkt") (lib "typed-racket/static-contracts/combinators/lengths.rkt") (lib "typed-racket/utils/literal-syntax-class.rkt") (lib "typed-racket/optimizer/optimizer.rkt") (lib "typed-racket/utils/hash-contract.rkt") (lib "typed-racket/typecheck/check-class-unit.rkt") (lib "typed-racket/infer/infer.rkt") (lib "typed-racket/utils/struct-info.rkt") (lib "typed-racket/base-env/top-interaction.rkt") (lib "typed-racket/static-contracts/combinators/structural.rkt") (lib "typed-racket/typecheck/tc-app/utils.rkt") (lib "typed-racket/private/with-types.rkt") (lib "typed-racket/optimizer/pair.rkt") (lib "typed-racket/typecheck/tc-app/tc-app-eq.rkt") (lib "typed-racket/utils/arm.rkt") (lib "typed-racket/rep/type-constr.rkt") (lib "typed-racket/typed-racket.rkt") (lib "typed-racket/utils/identifier.rkt") (lib "typed-racket/utils/class-utils.rkt") (lib "typed/racket/deep.rkt") (lib "typed/racket/base/no-check/lang/reader.rkt") (lib "typed-racket/utils/typed-method-property.rkt") (lib "typed-racket/env/env-req.rkt") (lib "typed-racket/types/numeric-tower.rkt") (lib "typed-racket/env/type-name-env.rkt") (lib "typed-racket/utils/eq-contract.rkt") (lib "typed-racket/typecheck/tc-app/tc-app-special.rkt") (lib "typed-racket/optimizer/numeric-utils.rkt") (lib "typed-racket/typecheck/tc-funapp.rkt") (lib "typed-racket/env/global-env.rkt") (lib "typed-racket/rep/filter-rep.rkt") (lib "typed/racket/no-check/lang/reader.rkt") (lib "typed-racket/types/generalize.rkt") (lib "typed-racket/core.rkt") (lib "typed-racket/utils/shallow-contract.rkt") (lib "typed-racket/static-contracts/parametric-check.rkt") (lib "typed-racket/env/scoped-tvar-env.rkt") (lib "typed-racket/env/struct-name-env.rkt") (lib "typed-racket/private/shallow-rewrite.rkt") (lib "typed-racket/utils/early-return.rkt") (lib "typed-racket/typecheck/tc-literal.rkt") (lib "typed-racket/rep/prop-rep.rkt") (lib "typed-racket/types/utils.rkt") (lib "typed-racket/utils/disappeared-use.rkt") (lib "typed-racket/static-contracts/combinators/any.rkt") (lib "typed-racket/logic/proves.rkt") (lib "typed-racket/typecheck/tc-app/tc-app-contracts.rkt") (lib "typed-racket/types/subtract.rkt") (lib "typed/private/utils.rkt") (lib "typed-racket/optimizer/struct.rkt") (lib "typed-racket/static-contracts/combinators/simple.rkt") (lib "typed-racket/base-env/prims-contract.rkt") (lib "typed-racket/utils/opaque-object.rkt") (lib "typed-racket/static-contracts/combinators/dep-function.rkt") (lib "typed-racket/rep/numeric-base-types.rkt") (lib "typed/racket/deep/lang/reader.rkt") (lib "typed-racket/typecheck/tc-app/tc-app-objects.rkt") (lib "typed-racket/base-env/ann-inst.rkt") (lib "typed-racket/rep/free-variance.rkt") (lib "typed-racket/rep/rep-utils.rkt") (lib "typed-racket/utils/plambda-utils.rkt") (lib "typed-racket/typecheck/internal-forms.rkt") (lib "typed-racket/base-env/unit-prims.rkt") (lib "typed/file/sha1.rkt") (lib "typed/racket/base/shallow/lang/reader.rkt") (lib "typed-racket/typecheck/find-annotation.rkt") (lib "typed/racket/unsafe.rkt") (lib "typed/racket/optional/lang/reader.rkt") (lib "typed-racket/static-contracts/combinators/control.rkt") (lib "typed-racket/typecheck/tc-envops.rkt") (lib "typed/racket/shallow.rkt") (lib "typed-racket/private/parse-classes.rkt") (lib "typed-racket/base-env/for-clauses.rkt") (lib "typed-racket/static-contracts/combinators/object.rkt") (lib "typed-racket/typecheck/tc-apply.rkt") (lib "typed-racket/types/substitute.rkt") (lib "typed-racket/infer/constraints.rkt") (lib "typed-racket/utils/mutated-vars.rkt") (lib "typed-racket/minimal.rkt") (lib "typed/racket.rkt") (lib "typed-racket/private/type-contract.rkt") (lib "typed-racket/utils/redirect-contract.rkt") (lib "typed-racket/optimizer/hidden-costs.rkt") (lib "typed-racket/typecheck/tc-app/tc-app-list.rkt") (lib "typed-racket/typecheck/integer-refinements.rkt") (lib "typed-racket/base-env/class-clauses.rkt") (lib "typed-racket/typecheck/tc-expression.rkt") (lib "typed-racket/utils/lift.rkt") (lib "typed-racket/static-contracts/combinators/parametric.rkt") (lib "typed-racket/typecheck/error-message.rkt") (lib "typed-racket/optimizer/fixnum.rkt") (lib "typed-racket/optimizer/logging.rkt") (lib "typed-racket/base-env/prims-lambda.rkt") (lib "typed/racket/base/optional.rkt") (lib "typed-racket/typecheck/tc-subst.rkt") (lib "typed-racket/private/class-literals.rkt") (lib "typed-racket/optimizer/number.rkt") (lib "typed-racket/base-env/base-structs.rkt") (lib "typed-racket/types/kw-types.rkt") (lib "typed-racket/static-contracts/structures.rkt") (lib "typed-racket/types/struct-table.rkt") (lib "typed-racket/typecheck/provide-handling.rkt") (lib "typed-racket/env/index-env.rkt") (lib "typed-racket/base-env/base-env.rkt") (lib "typed-racket/types/path-type.rkt") (lib "typed-racket/infer/intersect.rkt") (lib "typed-racket/utils/prefab-c.rkt") (lib "typed/racket/optional.rkt") (lib "typed-racket/typecheck/tc-let-unit.rkt") (lib "typed/racket/no-check.rkt") (lib "typed-racket/base-env/signature-prims.rkt") (lib "typed/private/no-check-helper.rkt") (lib "typed-racket/utils/vector-contract.rkt") (lib "typed-racket/env/tvar-env.rkt") (lib "typed/racket/base/lang/reader.rkt") (lib "typed-racket/private/parse-type.rkt") (lib "typed-racket/typecheck/def-binding.rkt") (lib "typed/private/rewriter.rkt") (lib "typed-racket/rep/base-types.rkt") (lib "typed/racket/system.rkt") (lib "typed-racket/base-env/base-env-uncontracted.rkt") (lib "typed-racket/typecheck/toplevel-trampoline.rkt") (lib "typed-racket/minimal/lang/reader.rkt") (lib "typed-racket/types/classes.rkt") (lib "typed-racket/static-contracts/combinators/unit.rkt") (lib "typed-racket/types/overlap.rkt") (lib "typed-racket/rep/object-rep.rkt") (lib "typed-racket/typecheck/tc-app/tc-app-main.rkt") (lib "typed-racket/env/env-utils.rkt") (lib "typed-racket/types/printer.rkt") (lib "typed-racket/typecheck/check-below.rkt") (lib "typed-racket/optimizer/string.rkt") (lib "typed/racket/base/no-check.rkt") (lib "typed-racket/typecheck/signatures.rkt") (lib "typed-racket/types/signatures.rkt") (lib "typed-racket/typecheck/tc-toplevel.rkt") (lib "typed-racket/typecheck/possible-domains.rkt") (lib "typed-racket/optimizer/apply.rkt") (lib "typed-racket/typecheck/tc-expr-unit.rkt") (lib "typed-racket/static-contracts/combinators/prefab.rkt") (lib "typed-racket/optimizer/float-complex.rkt") (lib "typed-racket/private/syntax-properties.rkt") (lib "typed-racket/rep/free-ids.rkt") (lib "typed-racket/optimizer/unboxed-let.rkt") (lib "typed-racket/utils/tc-utils.rkt") (lib "typed-racket/language-info.rkt") (lib "typed-racket/types/match-expanders.rkt") (lib "typed-racket/static-contracts/combinators/struct.rkt") (lib "typed-racket/infer/promote-demote.rkt") (lib "typed-racket/optimizer/unboxed-tables.rkt") (lib "typed-racket/typecheck/check-subforms-unit.rkt") (lib "typed-racket/base-env/env-lang.rkt") (lib "typed-racket/rep/core-rep.rkt") (lib "typed-racket/typecheck/tc-send.rkt") (lib "typed-racket/utils/sealing-contract.rkt") (lib "typed/racket/unit.rkt") (lib "typed-racket/static-contracts/instantiate.rkt") (lib "typed-racket/utils/simple-result-arrow.rkt") (lib "typed-racket/base-env/base-special-env.rkt") (lib "typed-racket/rep/rep-switch.rkt") (lib "typed-racket/utils/shallow-utils.rkt") (lib "typed-racket/base-env/extra-procs.rkt") (lib "typed-racket/base-env/base-contracted.rkt") (lib "typed-racket/base-env/prims.rkt") (lib "typed-racket/typecheck/renamer.rkt") (lib "typed-racket/base-env/base-env-numeric.rkt") (lib "typed-racket/rep/type-rep.rkt") (lib "typed/racket/base.rkt") (lib "typed-racket/static-contracts/equations.rkt") (lib "typed-racket/types/numeric-predicates.rkt") (lib "typed-racket/types/abbrev.rkt") (lib "typed-racket/base-env/base-env-indexing.rkt") (lib "typed-racket/optimizer/extflonum.rkt") (lib "typed-racket/static-contracts/combinators/symbolic-object.rkt") (lib "typed-racket/rep/fme-utils.rkt") (lib "typed-racket/typecheck/tc-app/tc-app-values.rkt") (lib "typed-racket/static-contracts/combinators/name.rkt") (lib "typed-racket/env/signature-helper.rkt") (lib "typed-racket/optimizer/dead-code.rkt") (lib "typed-racket/utils/tarjan.rkt") (lib "typed-racket/types/union.rkt") (lib "typed-racket/rep/type-mask.rkt") (lib "typed-racket/base-env/prims-struct.rkt") (lib "typed-racket/optimizer/list.rkt") (lib "typed-racket/typecheck/tc-app/signatures.rkt") (lib "typed-racket/optimizer/box.rkt") (lib "typed-racket/static-contracts/optimize.rkt") (lib "typed-racket/infer/fail.rkt") (lib "typed-racket/env/type-constr-env.rkt") (lib "typed-racket/rep/values-rep.rkt") (lib "typed-racket/utils/require-contract.rkt") (lib "typed-racket/base-env/annotate-classes.rkt") (lib "typed-racket/utils/prefab.rkt") (lib "typed-racket/private/type-annotation.rkt") (lib "typed-racket/typecheck/tc-app/tc-app-keywords.rkt") (lib "typed/racket/lang/reader.rkt") (lib "typed/racket/date.rkt") (lib "typed-racket/base-env/colon.rkt") (lib "typed-racket/utils/utils.rkt") (lib "typed-racket/static-contracts/constraints.rkt") (lib "typed-racket/infer/signatures.rkt") (lib "typed/racket/base/shallow.rkt") (lib "typed-racket/typecheck/tc-app-combined.rkt") (lib "typed-racket/utils/stxclass-util.rkt") (lib "typed/racket/base/deep.rkt") (lib "typed-racket/types/tc-result.rkt") (lib "typed-racket/optimizer/vector.rkt") (lib "typed-racket/typecheck/typechecker.rkt") (lib "typed-racket/private/cast-table.rkt") (lib "typed-racket/env/mvar-env.rkt") (lib "typed-racket/env/type-alias-helper.rkt") (lib "typed-racket/optimizer/utils.rkt") (lib "typed-racket/static-contracts/combinators/exist.rkt") (lib "typed-racket/typecheck/check-unit-unit.rkt") (lib "typed-racket/utils/unit-utils.rkt") (lib "typed/racket/shallow/lang/reader.rkt") (lib "typed-racket/base-env/base-types.rkt") (lib "typed-racket/base-env/base-env-indexing-abs.rkt") (lib "typed-racket/base-env/extra-env-lang.rkt") (lib "typed-racket/standard-inits.rkt") (lib "typed-racket/rep/base-union.rkt") (lib "typed-racket/typecheck/tc-app/tc-app-hetero.rkt") (lib "typed-racket/utils/evt-contract.rkt") (lib "typed-racket/utils/disarm.rkt") (lib "typed-racket/optimizer/float.rkt") (lib "typed-racket/types/base-abbrev.rkt") (lib "typed-racket/types/tc-error.rkt") (lib "typed/private/wrap.rkt") (lib "typed-racket/typecheck/tc-structs.rkt") (lib "typed-racket/types/prop-ops.rkt") (lib "typed/file/tar.rkt") (lib "typed-racket/base-env/base-types-extra.rkt") (lib "typed-racket/types/update.rkt") (lib "typed-racket/static-contracts/combinators/none.rkt") (lib "typed-racket/types/subtype.rkt") (lib "typed-racket/infer/constraint-structs.rkt") (lib "typed-racket/types/type-table.rkt") (lib "typed-racket/env/type-alias-env.rkt") (lib "typed-racket/typecheck/tc-app-helper.rkt") (lib "typed-racket/private/user-defined-type-constr.rkt") (lib "typed-racket/utils/inspector.rkt"))) (name . "typed-racket-lib") (ring . 0) (rt-dependencies . (("base" #:version "8.7.0.10") "source-syntax" "pconvert-lib" "compatibility-lib" "string-constants-lib")) (search-terms . #hasheq((author:samth@racket-lang.org . #t) (author:stamourv@racket-lang.org . #t) (main-distribution . #t) (ring:0 . #t))) (source . "git://github.com/racket/typed-racket/?path=typed-racket-lib") (tags . ("main-distribution")) (versions . #hash((default . #hasheq((checksum . "93f965767adfc37ca3eeaad4549d18104b8edbc6") (source . "git://github.com/racket/typed-racket/?path=typed-racket-lib") (source_url . "git://github.com/racket/typed-racket/?path=typed-racket-lib"))))))