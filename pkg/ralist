#hasheq((author . "dvanhorn@racket-lang.org") (authors . ("dvanhorn@racket-lang.org")) (build . #hash((conflicts-log . #f) (dep-failure-log . #f) (docs . (("main" "ralist" "doc/ralist@ralist/index.html"))) (failure-log . #f) (min-failure-log . #f) (success-log . "server/built/install/ralist.txt") (test-failure-log . #f) (test-success-log . "server/built/test-success/ralist.txt"))) (checksum . "8f830a01463c547d2588671e76202cfe566a3fb1") (checksum-error . #f) (collection . (multi)) (conflicts . ()) (dependencies . ("base" "rackunit-lib" "rackunit-doc" "scribble-lib" "racket-doc" "rackunit-doc")) (description . "Purely Functional Random Access Lists") (implies . ()) (modules . ((lib "data/ralist/scribblings/run-tests.scrbl") (lib "data/ralist/contract.rkt") (lib "data/ralist/tests/freq-count.rkt") (lib "data/ralist/scribblings/run-benchmarks.scrbl") (lib "data/ralist/tests/tree.rkt") (lib "data/ralist/scribblings/ralist.scrbl") (lib "data/ralist/benchmarks/ra-list.rkt") (lib "data/ralist/run-benchmarks.rkt") (lib "data/ralist/tests/garden-fence.rkt") (lib "data/ralist/scribblings/bindings.scrbl") (lib "data/ralist/tests/private/ra-list-contracted.rkt") (lib "data/ralist.rkt") (lib "data/ralist/benchmarks/garden-fence.rkt") (lib "data/ralist/tests/private/ra-list-uncontracted.rkt") (lib "data/ralist/run-tests.rkt") (lib "data/ralist/tests/ra-list.rkt") (lib "data/ralist/benchmarks/freq-count.rkt") (lib "data/ralist/scribblings/contract.scrbl") (lib "data/ralist/benchmarks/contract.rkt"))) (name . "ralist") (ring . 1) (search-terms . #hasheq((:build-success: . #t) (:docs: . #t) (author:dvanhorn@racket-lang.org . #t) (data . #t) (ring:1 . #t))) (source . "github://github.com/dvanhorn/ralist/master") (tags . ("data")) (versions . #hash((default . #hasheq((checksum . "8f830a01463c547d2588671e76202cfe566a3fb1") (source . "github://github.com/dvanhorn/ralist/master") (source_url . "http://github.com/dvanhorn/ralist/tree/master"))))))