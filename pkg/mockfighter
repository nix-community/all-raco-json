#hasheq((author . "euler90h@gmail.com") (authors . ("euler90h@gmail.com")) (build . #hash((conflicts-log . #f) (dep-failure-log . "server/built/deps/mockfighter.txt") (docs . (("main" "mockfighter" "doc/mockfighter@mockfighter/index.html"))) (failure-log . #f) (min-failure-log . #f) (success-log . "server/built/install/mockfighter.txt") (test-failure-log . "server/built/test-fail/mockfighter.txt") (test-success-log . #f))) (checksum . "63906eff874e90644725dbff5365889d959e2294") (checksum-error . #f) (collection . "mockfighter") (conflicts . ()) (dependencies . ("base" "rackunit-lib" "stockfighter-racket" "scribble-lib" "racket-doc")) (description . "Stockfighter-like API for a limit order exchange") (implies . ()) (modules . ((lib "mockfighter/utils.rkt") (lib "mockfighter/mm.rkt") (lib "mockfighter/server.rkt") (lib "mockfighter/main.rkt") (lib "mockfighter/server-test.rkt") (lib "mockfighter/venue.rkt") (lib "mockfighter/scribblings/mockfighter.scrbl") (lib "mockfighter/matching-engine.rkt") (lib "mockfighter/websocket-test.rkt") (lib "mockfighter/noise-trader.rkt") (lib "mockfighter/game-master.rkt") (lib "mockfighter/orderbook.rkt") (lib "mockfighter/retail-trader.rkt"))) (name . "mockfighter") (ring . 1) (search-terms . #hasheq((:build-dep-fail: . #t) (:build-success: . #t) (:docs: . #t) (author:euler90h@gmail.com . #t) (finance . #t) (ring:1 . #t) (stockfighter . #t))) (source . "http://github.com/eu90h/mockfighter/tree/master") (tags . ("finance" "stockfighter")) (versions . #hash((default . #hasheq((checksum . "63906eff874e90644725dbff5365889d959e2294") (source . "git://github.com/eu90h/mockfighter") (source_url . "http://github.com/eu90h/mockfighter/tree/master"))))))