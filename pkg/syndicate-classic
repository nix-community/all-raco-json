#hasheq((author . "tonygarnockjones@gmail.com samc@ccs.neu.edu") (authors . ("tonygarnockjones@gmail.com" "samc@ccs.neu.edu")) (build . #hash((conflicts-log . "conflicts.txt") (dep-failure-log . #f) (docs . (("extract" "typed-syndicate" "doc/typed-syndicate@syndicate-classic/index.html") ("extract" "syndicate" "doc/syndicate@syndicate-classic/index.html") ("extract" "syndicate-gl" "doc/syndicate-gl@syndicate-classic/index.html"))) (failure-log . #f) (min-failure-log . #f) (success-log . "server/built/install/syndicate-classic.txt") (test-failure-log . "server/built/test-fail/syndicate-classic.txt") (test-success-log . #f))) (checksum . "0226b74305d3e0d33d5b65a4d03652b5f11c0504") (checksum-error . #f) (collection . (multi)) (conflicts . ("syndicate")) (date-added . 1620808748) (dependencies . ("base" "data-lib" "htdp-lib" "net-lib" "profile-lib" "rackunit-lib" "sha" "automata" "auxiliary-macro-context" "data-enumerate-lib" "datalog" "db-lib" "draw-lib" "gui-lib" "images-lib" "macrotypes-lib" "pict-lib" "rackunit-macrotypes-lib" "rfc6455" "sandbox-lib" "sgl" "struct-defaults" "turnstile-example" "turnstile-lib" "web-server-lib" "draw-doc" "gui-doc" "htdp-doc" "pict-doc" "racket-doc" "scribble-lib" "sha")) (description . "A language for interactive programs. Previous version of #lang syndicate, prior to incorporation of capabilities.") (implies . ()) (license . #f) (modules . ((lib "syndicate-gui-toolbox/examples/7-GUIS/task-6.rkt") (lib "syndicate/examples/actor/chat-multiroom-topic-persist.rkt") (lib "syndicate/tests/facet-creation-during-stop-from-grandchild.rkt") (lib "typed/tests/primitives.rkt") (lib "syndicate/tests/ping-pong.rkt") (lib "typed/syndicate/sequence.rkt") (lib "syndicate/dataflow.rkt") (lib "syndicate/examples/actor/example-demand-matcher-glitch-bug2.rkt") (lib "syndicate/random-test.rkt") (lib "syndicate/examples/actor/chat-simplified-internals.rkt") (lib "syndicate/examples/actor/example-synthetic-patch.rkt") (lib "typed/examples/struct-out/struct-in.rkt") (lib "typed/examples/file-system.rkt") (lib "syndicate/monolithic/core.rkt") (lib "syndicate/examples/actor/file-system-during2.rkt") (lib "syndicate/drivers/smtp.rkt") (lib "syndicate/pattern.rkt") (lib "syndicate/monitor.rkt") (lib "syndicate/examples/udp-hello-plain.rkt") (lib "syndicate/examples/mini-echo.rkt") (lib "syndicate/examples/actor/queue-no-credit2.rkt") (lib "syndicate/reload.rkt") (lib "typed/examples/requires.rkt") (lib "syndicate/examples/actor/big-bang.rkt") (lib "syndicate/tests/maintain-knowledge-across-events.rkt") (lib "typed/examples/struct-out/typed-out.rkt") (lib "syndicate-gui-toolbox/examples/7-GUIS/task-4.rkt") (lib "syndicate/canonicalize.rkt") (lib "syndicate/examples/chat-simplified-internals.rkt") (lib "syndicate/examples/example-lang.rkt") (lib "syndicate/examples/actor/web-sanity-check.rkt") (lib "typed/tests/regression-define-with-effects.rkt") (lib "syndicate/monolithic.rkt") (lib "typed/examples/with-facets.rkt") (lib "syndicate/lang.rkt") (lib "syndicate/examples/actor/example-memoized.rkt") (lib "syndicate/examples/actor/chat-simplified-internals2.rkt") (lib "syndicate/test-lang.rkt") (lib "syndicate/tests/multi-level-message.rkt") (lib "syndicate/trace.rkt") (lib "syndicate/examples/actor/tcp-relay2.rkt") (lib "typed/syndicate/prim.rkt") (lib "syndicate/examples/two-buyer-protocol-incremental.rkt") (lib "syndicate/examples/example-meta-echo.rkt") (lib "syndicate-ide/main.rkt") (lib "syndicate/supervise.rkt") (lib "syndicate/tests/bank-account.rkt") (lib "syndicate/examples/udp-multicast.rkt") (lib "syndicate/examples/actor/let-event.rkt") (lib "syndicate-gui-toolbox/examples/7-GUIS/task-3.rkt") (lib "syndicate/examples/example-quit-world.rkt") (lib "typed/tests/phantom-rho.rkt") (lib "syndicate/examples/actor/example-glitch.rkt") (lib "typed/tests/for-loop-regression.rkt") (lib "syndicate/patch.rkt") (lib "syndicate/support/bytes.rkt") (lib "syndicate/trace/stderr.rkt") (lib "typed/syndicate/for-loops.rkt") (lib "syndicate/drivers/tcp.rkt") (lib "syndicate/core.rkt") (lib "typed/syndicate/first-facet-lang-attempt.rkt") (lib "typed/examples/book-club.rkt") (lib "syndicate/examples/echo.rkt") (lib "syndicate/examples/actor/example-assertion-spike.rkt") (lib "syndicate/examples/actor/simple-cross-layer.rkt") (lib "syndicate/tests/use-current-knowledge-with-new-facet.rkt") (lib "syndicate/drivers/timestate.rkt") (lib "syndicate/examples/ws-echo-client.rkt") (lib "syndicate/examples/actor/f-to-c4.rkt") (lib "typed/syndicate/ltl.rkt") (lib "typed/syndicate/list.rkt") (lib "syndicate/examples/actor/f-to-c3.rkt") (lib "syndicate/examples/key-value-store.rkt") (lib "syndicate/examples/actor/example-bug-query-scope.rkt") (lib "syndicate/actor-lang.rkt") (lib "syndicate/examples/actor/irc-client.rkt") (lib "syndicate/trie.rkt") (lib "syndicate/main.rkt") (lib "syndicate/examples/actor/example-action-after-suspension.rkt") (lib "typed/examples/provides.rkt") (lib "syndicate/examples/actor/example-filesystem.rkt") (lib "typed/tests/spin/basic-assertion.rkt") (lib "typed/tests/spin/basic-assertion-communication.rkt") (lib "syndicate/examples/actor/forward-chaining-mini.rkt") (lib "typed/examples/simple-query-value.rkt") (lib "typed/tests/overly-broad-interests.rkt") (lib "syndicate/examples/big-bang.rkt") (lib "syndicate/examples/actor/add1-simple.rkt") (lib "syndicate/examples/actor/fs-shell.rkt") (lib "syndicate/examples/actor/f-to-c2.rkt") (lib "syndicate/examples/actor/cleanup.rkt") (lib "typed/examples/chat-tcp2.rkt") (lib "typed/examples/struct-out/struct-out.rkt") (lib "syndicate/examples/actor/ceu-leds.rkt") (lib "syndicate/threaded.rkt") (lib "typed/examples/internal-knowledge.rkt") (lib "syndicate/lang/reader.rkt") (lib "syndicate/big-bang/timestate.rkt") (lib "syndicate/examples/actor/double-click.rkt") (lib "syndicate/examples/actor/example-responsibility-transfer-2.rkt") (lib "syndicate/examples/actor/chat.rkt") (lib "typed/core.rkt") (lib "syndicate/examples/actor/example-partial-retraction.rkt") (lib "syndicate/examples/chat-no-quit-world-no-nesting.rkt") (lib "syndicate/tests/simple1.rkt") (lib "typed/examples/core/bank-account.rkt") (lib "syndicate-gl/examples/clock-face.rkt") (lib "syndicate/examples/actor/broadcast-messages.rkt") (lib "typed/syndicate/set.rkt") (lib "typed/syndicate/either.rkt") (lib "syndicate/examples/actor/echo.rkt") (lib "typed/tests/constructor-naming-conventions.rkt") (lib "syndicate/examples/box-and-client.rkt") (lib "syndicate/examples/example-meta-drop.rkt") (lib "syndicate/examples/actor/example-demand-matcher-glitch-bug.rkt") (lib "syndicate-gui-toolbox/examples/7-GUIS/task-1.rkt") (lib "syndicate/examples/actor/sandbox-os.rkt") (lib "syndicate/examples/actor/queue-no-credit.rkt") (lib "syndicate/examples/actor/rpc-with-error.rkt") (lib "syndicate/examples/ws-hello.rkt") (lib "syndicate/examples/actor/tcp-relay.rkt") (lib "typed/syndicate/lang/reader.rkt") (lib "typed/examples/struct-out/client.rkt") (lib "syndicate/examples/actor/irc.rkt") (lib "syndicate/examples/actor/udp-echo.rkt") (lib "typed/tests/comm-ty-composition.rkt") (lib "typed/examples/two-buyer-protocol.rkt") (lib "syndicate/examples/example-wildcard-assertion-1.rkt") (lib "typed/tests/spin/var-assert-basic.rkt") (lib "syndicate/drivers/filesystem.rkt") (lib "syndicate-gui-toolbox/examples/7-GUIS/task-5.rkt") (lib "syndicate/pretty.rkt") (lib "syndicate/examples/actor/chain.rkt") (lib "syndicate/examples/actor/show-field-scope-enforcement1.rkt") (lib "syndicate/examples/actor/web-demo.rkt") (lib "syndicate/examples/actor/make.rkt") (lib "typed/examples/realize.rkt") (lib "syndicate/broker/server.rkt") (lib "typed/tests/var-assert.rkt") (lib "syndicate/examples/actor/example-responsibility-transfer-1.rkt") (lib "syndicate/comprehensions.rkt") (lib "syndicate/examples/actor/f-to-c5.rkt") (lib "typed/examples/core/book-club.rkt") (lib "typed/examples/struct-out/untyped.rkt") (lib "syndicate/examples/actor/example-during-criterion-snapshotting.rkt") (lib "typed/tests/struct-provider.rkt") (lib "syndicate/examples/actor/chat-client-tcp2.rkt") (lib "syndicate/examples/actor/two-buyer-protocol.rkt") (lib "syndicate/little-actors/core.rkt") (lib "syndicate/protocol/instance.rkt") (lib "syndicate/tests/nested-spawn-exceptions.rkt") (lib "typed/tests/spawn.rkt") (lib "typed/tests/define-dataflow.rkt") (lib "syndicate/tset.rkt") (lib "syndicate/examples/actor/chat-multiroom-topic.rkt") (lib "syndicate/examples/actor/running-total.rkt") (lib "syndicate/drivers/timer.rkt") (lib "syndicate/examples/actor/show-field-scope-enforcement4.rkt") (lib "syndicate/drivers/config.rkt") (lib "syndicate/demand-matcher.rkt") (lib "syndicate/drivers/web.rkt") (lib "syndicate/drivers/line-reader.rkt") (lib "syndicate/examples/two-buyer-protocol-monolithic.rkt") (lib "syndicate/drivers/tcp2.rkt") (lib "syndicate-ide/hsv.rkt") (lib "typed/tests/for-loops.rkt") (lib "typed/syndicate/roles.rkt") (lib "typed/examples/require-struct/driver.rkt") (lib "syndicate/trace/util.rkt") (lib "syndicate/examples/actor/internal-knowledge.rkt") (lib "syndicate/functional-queue.rkt") (lib "syndicate/examples/actor/lambda.rkt") (lib "typed/tests/sets.rkt") (lib "syndicate/examples/ws-echo.rkt") (lib "typed/tests/effect-polymorhpism.rkt") (lib "syndicate/examples/example-wildcard-assertion-2.rkt") (lib "syndicate/examples/actor/chat-client.rkt") (lib "syndicate/drivers/udp.rkt") (lib "syndicate/examples/actor/gui.rkt") (lib "typed/examples/bank-account.rkt") (lib "syndicate/examples/actor/chat-no-quit-world-no-nesting.rkt") (lib "syndicate/examples/actor/example-supervise.rkt") (lib "typed/examples/simple-query-set.rkt") (lib "syndicate/examples/actor/mutable-cell.rkt") (lib "syndicate/examples/actor/example-termination-scripts-1.rkt") (lib "typed/examples/simple-stop-facet.rkt") (lib "syndicate/examples/chat-no-quit-world.rkt") (lib "typed/tests/expressions.rkt") (lib "syndicate/examples/forward-chaining.rkt") (lib "typed/syndicate/syntax-serializer.rkt") (lib "syndicate/examples/actor/file-system-lll.rkt") (lib "typed/syndicate/drivers/tcp.rkt") (lib "typed/examples/require-struct/client.rkt") (lib "syndicate/big-bang.rkt") (lib "typed/tests/regression-count-new-words.rkt") (lib "typed/syndicate/test-utils.rkt") (lib "syndicate/firewall.rkt") (lib "syndicate/examples/actor/vacuous-facet.rkt") (lib "typed/tests/pattern-annotations.rkt") (lib "syndicate/actor.rkt") (lib "syndicate/examples/actor/chat-no-quit-world.rkt") (lib "syndicate/examples/actor/flip-flop.rkt") (lib "typed/syndicate/proto.rkt") (lib "syndicate/examples/actor/realize.rkt") (lib "syndicate/examples/tcp-hello.rkt") (lib "syndicate/examples/actor/file-system.rkt") (lib "syndicate-gl/affine.rkt") (lib "typed/tests/floating-define.rkt") (lib "syndicate/examples/actor/simple-dns.rkt") (lib "syndicate-gl/examples/many.rkt") (lib "typed/examples/require-struct/client2.rkt") (lib "syndicate/examples/actor/example-termination-scripts-2.rkt") (lib "syndicate/examples/actor/fib-server.rkt") (lib "syndicate/examples/actor/example-multiple-suspension-resumption.rkt") (lib "typed/syndicate/roles/lang/reader.rkt") (lib "syndicate/examples/actor/parameters.rkt") (lib "typed/tests/removing-annotations.rkt") (lib "syndicate/drivers/gui.rkt") (lib "syndicate/examples/example-layer.rkt") (lib "syndicate/core-lang.rkt") (lib "syndicate/monolithic/scn.rkt") (lib "syndicate-gui-toolbox/examples/7-GUIS/cells-canvas.rkt") (lib "syndicate/examples/actor/bank-account.rkt") (lib "typed/examples/observe-star.rkt") (lib "syndicate/examples/actor/file-system-during.rkt") (lib "typed/tests/require-struct.rkt") (lib "syndicate-gl/scribblings/syndicate-gl.scrbl") (lib "syndicate-gl/texture.rkt") (lib "syndicate/examples/actor/firewall-demo.rkt") (lib "syndicate/examples/actor/chat-tcp2.rkt") (lib "syndicate/examples/example-plain.rkt") (lib "typed/examples/core/box-and-client.rkt") (lib "syndicate/support/hash.rkt") (lib "syndicate/examples/actor/timestate.rkt") (lib "syndicate/ground.rkt") (lib "syndicate/support/struct.rkt") (lib "syndicate/drivers/websocket.rkt") (lib "syndicate/examples/actor/example-bug-rising-edge-true.rkt") (lib "syndicate/scribblings/syndicate.scrbl") (lib "typed/tests/endpoint-effects-branch.rkt") (lib "typed/examples/simple-query-hash.rkt") (lib "syndicate/hierarchy.rkt") (lib "syndicate/examples/bank-account.rkt") (lib "syndicate/tests/create-new-facet-in-on-stop.rkt") (lib "typed/syndicate/core-types.rkt") (lib "syndicate/examples/actor/flink.rkt") (lib "syndicate/tests/simple-multi-level.rkt") (lib "typed/examples/cell.rkt") (lib "syndicate/examples/chat-client.rkt") (lib "syndicate/examples/actor/chat-multiroom.rkt") (lib "syndicate/examples/actor/fs-protocol.rkt") (lib "syndicate-gui-toolbox/examples/7-GUIS/task-2.rkt") (lib "syndicate/examples/actor/file-system-lll2.rkt") (lib "syndicate/examples/actor/chat-bot.rkt") (lib "syndicate-gl/examples/basic.rkt") (lib "typed/examples/simple-during-spawn.rkt") (lib "syndicate/examples/actor/f-to-c.rkt") (lib "syndicate/store.rkt") (lib "syndicate/examples/actor/mutex.rkt") (lib "typed/scribblings/typed-syndicate.scrbl") (lib "syndicate/tests/boop.rkt") (lib "syndicate/tests/stop-when-react.rkt") (lib "typed/tests/hashes.rkt") (lib "typed/syndicate/core-expressions.rkt") (lib "syndicate/examples/actor/mini-echo.rkt") (lib "typed/syndicate/drivers/timestate.rkt") (lib "typed/tests/inference.rkt") (lib "syndicate/broker/protocol.rkt") (lib "syndicate/protocol/standard-relay.rkt") (lib "syndicate-gl/2d.rkt") (lib "typed/examples/simple-dataflow.rkt") (lib "syndicate/examples/all-pairs-shortest-paths/all-pairs-shortest-paths2.rkt") (lib "syndicate/relay.rkt") (lib "syndicate/examples/all-pairs-shortest-paths/all-pairs-shortest-paths3.rkt") (lib "typed/syndicate/hash.rkt") (lib "typed/examples/flink.rkt") (lib "typed/syndicate/sugar.rkt") (lib "typed/tests/sequences.rkt") (lib "typed/examples/require-struct/omit-accs/lib.rkt") (lib "syndicate/examples/actor/queue.rkt") (lib "syndicate/tests/multi-level-other-way.rkt") (lib "syndicate/treap.rkt") (lib "syndicate/examples/actor/file-system2.rkt") (lib "typed/syndicate/maybe.rkt") (lib "syndicate/mux.rkt") (lib "syndicate/trace/msd.rkt") (lib "typed/syndicate/compile-spin.rkt") (lib "syndicate/profile.rkt") (lib "syndicate/examples/example-quit-dataspace-with-assertion.rkt") (lib "syndicate/examples/chat.rkt") (lib "syndicate/test.rkt") (lib "syndicate/examples/actor/box-and-client.rkt") (lib "syndicate/examples/example-meta-echo2.rkt") (lib "syndicate/examples/example-swap-int-and-claim.rkt") (lib "typed/syndicate/core/lang/reader.rkt") (lib "syndicate/drivers/irc.rkt") (lib "syndicate/examples/all-pairs-shortest-paths/all-pairs-shortest-paths.rkt") (lib "typed/examples/flink-support.rkt") (lib "syndicate/examples/durable-key-value-store.rkt") (lib "syndicate-gui-toolbox/examples/7-GUIS/task-7.rkt") (lib "syndicate/syntax-classes.rkt") (lib "syndicate-gui-toolbox/widgets.rkt") (lib "syndicate/examples/ws-hello-ssl.rkt") (lib "typed/examples/require-struct/omit-accs/require-omit-accs.rkt") (lib "typed/tests/basic-bad-assertion.rkt") (lib "typed/examples/simple-during.rkt") (lib "syndicate/examples/bank-account-monolithic.rkt") (lib "syndicate/examples/actor/spreadsheet.rkt") (lib "syndicate/hash-order.rkt") (lib "typed/examples/ping-pong.rkt") (lib "syndicate/examples/actor/example-synthetic-patch-2.rkt") (lib "syndicate/protocol/advertise.rkt") (lib "syndicate/upside-down.rkt") (lib "syndicate/examples/actor/query-set.rkt") (lib "syndicate/trace/render-msd.rkt") (lib "syndicate/dataspace.rkt") (lib "typed/examples/simple-dataspace.rkt"))) (name . "syndicate-classic") (ring . 2) (rt-dependencies . ("base" "data-lib" "htdp-lib" "net-lib" "profile-lib" "rackunit-lib" "sha" "automata" "auxiliary-macro-context" "data-enumerate-lib" "datalog" "db-lib" "draw-lib" "gui-lib" "images-lib" "macrotypes-lib" "pict-lib" "rackunit-macrotypes-lib" "rfc6455" "sandbox-lib" "sgl" "struct-defaults" "turnstile-example" "turnstile-lib" "web-server-lib")) (search-terms . #hasheq((:build-conflicts: . #t) (:build-success: . #t) (:conflicts: . #t) (:docs-error: . #t) (:docs: . #t) (actors . #t) (author:samc@ccs.neu.edu . #t) (author:samcλ72e3ea3 . #t) (author:tonygarnockjones@gmail.com . #t) (author:tonygarnockjonesλe662f65 . #t) (dataspaces . #t) (ring:2 . #t) (syndicate . #t) (syndicate-gl . #t) (typed-syndicate . #t))) (source . "https://github.com/tonyg/syndicate.git?path=racket") (tags . ("actors" "dataspaces" "syndicate" "syndicate-gl" "typed-syndicate")) (versions . #hash((default . #hasheq((checksum . "0226b74305d3e0d33d5b65a4d03652b5f11c0504") (source . "https://github.com/tonyg/syndicate.git?path=racket") (source_url . "https://github.com/tonyg/syndicate.git?path=racket"))))))