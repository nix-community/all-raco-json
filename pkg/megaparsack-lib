#hasheq((author . "lexi.lambda@gmail.com") (authors . ("lexi.lambda@gmail.com")) (build . #hash((conflicts-log . #f) (dep-failure-log . #f) (docs . ()) (failure-log . #f) (min-failure-log . #f) (success-log . "server/built/install/megaparsack-lib.txt") (test-failure-log . #f) (test-success-log . "server/built/test-success/megaparsack-lib.txt"))) (checksum . "1d01c9ee274f66de4f193c73ff391ed6be553448") (checksum-error . #f) (collection . (multi)) (conflicts . ()) (dependencies . ("base" "curly-fn-lib" "functional-lib" "match-plus")) (description . "implementation (no documentation) for “megaparsack”") (implies . ()) (license . #f) (modules . ((lib "megaparsack/combinator.rkt") (lib "megaparsack/main.rkt") (lib "megaparsack/base.rkt") (lib "megaparsack/text.rkt"))) (name . "megaparsack-lib") (readme-url . "https://github.com/lexi-lambda/megaparsack/tree/HEAD/README.md") (ring . 1) (rt-dependencies . (("base" #:version "6.5") "curly-fn-lib" ("functional-lib" #:version "0.6") "match-plus")) (search-terms . #hasheq((:build-success: . #t) (author:lexi.lambda@gmail.com . #t) (author:lexi.lambdaλ81999a1 . #t) (parser . #t) (parsing . #t) (ring:1 . #t))) (source . "http://github.com/lexi-lambda/megaparsack/tree/master?path=megaparsack-lib") (tags . ("parser" "parsing")) (versions . #hash((default . #hasheq((checksum . "1d01c9ee274f66de4f193c73ff391ed6be553448") (source . "git://github.com/lexi-lambda/megaparsack?path=megaparsack-lib") (source_url . "http://github.com/lexi-lambda/megaparsack/tree/master?path=megaparsack-lib"))))))