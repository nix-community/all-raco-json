#hasheq((author . "alexander@knauth.org") (authors . ("alexander@knauth.org")) (build . #hash((conflicts-log . #f) (dep-failure-log . #f) (docs . (("main" "hash-lambda-toc" "doc/hash-lambda-toc@hash-lambda/index.html"))) (failure-log . #f) (min-failure-log . #f) (success-log . "server/built/install/hash-lambda.txt") (test-failure-log . #f) (test-success-log . "server/built/test-success/hash-lambda.txt"))) (checksum . "0f7a89d7056c8d9f86497e0eff159d142f74aed7") (checksum-error . #f) (collection . (multi)) (conflicts . ()) (dependencies . ("base" "unstable-lib" "unstable-list-lib" "kw-utils" "mutable-match-lambda" "rackunit-lib" "at-exp-lib" "scribble-lib" "sandbox-lib" "racket-doc")) (description . "using hash-tables for rest-arguments that include keyword-arguments") (implies . ()) (modules . ((lib "hash-lambda/all.rkt") (lib "hash-lambda/docs/hash-lambda-toc.scrbl") (lib "keyword-lambda/kw-apply.rkt") (lib "hash-lambda/mutable-match-lambda.rkt") (lib "hash-lambda/docs/mutable-match-lambda.scrbl") (lib "keyword-lambda/docs/keyword-case-lambda.scrbl") (lib "hash-lambda/main.rkt") (lib "keyword-lambda/docs/keyword-lambda.scrbl") (lib "keyword-lambda/keyword-apply-sort.rkt") (lib "keyword-lambda/arity+keywords.rkt") (lib "hash-lambda/prop-object-name.rkt") (lib "hash-lambda/docs/hash-lambda.scrbl") (lib "keyword-lambda/main.rkt") (lib "keyword-lambda/keyword-case-lambda.rkt") (lib "keyword-lambda/keyword-lambda.rkt"))) (name . "hash-lambda") (ring . 1) (search-terms . #hasheq((:build-success: . #t) (:docs: . #t) (author:alexander@knauth.org . #t) (deprecated . #t) (keywords . #t) (ring:1 . #t))) (source . "git://github.com/AlexKnauth/hash-lambda") (tags . ("deprecated" "keywords")) (versions . #hash((default . #hasheq((checksum . "0f7a89d7056c8d9f86497e0eff159d142f74aed7") (source . "git://github.com/AlexKnauth/hash-lambda") (source_url . "http://github.com/AlexKnauth/hash-lambda/tree/master"))))))