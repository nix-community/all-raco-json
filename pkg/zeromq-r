#hasheq((author . "ryanc@racket-lang.org") (authors . ("ryanc@racket-lang.org")) (build . #hash((conflicts-log . #f) (dep-failure-log . #f) (docs . (("main" "zeromq-r" "doc/zeromq-r@zeromq-r/index.html"))) (failure-log . #f) (min-failure-log . #f) (success-log . "server/built/install/zeromq-r.txt") (test-failure-log . #f) (test-success-log . "server/built/test-success/zeromq-r.txt"))) (checksum . "5917ef00278433cf4d953632a13744b6d826cae9") (checksum-error . #f) (collection . "zeromq") (conflicts . ()) (dependencies . ("base" "zeromq-r-lib" "rackunit-lib" "racket-doc" "scribble-lib")) (description . "Bindings for ZeroMQ") (implies . ("zeromq-r-lib")) (license . #f) (modules . ((lib "zeromq/zeromq-r.scrbl") (lib "zeromq/tests/poller.rkt") (lib "zeromq/tests/radio-dish.rkt") (lib "zeromq/tests/rep-req.rkt") (lib "zeromq/tests/scatter-gather.rkt") (lib "zeromq/tests/mutex.rkt") (lib "zeromq/tests/proxy.rkt") (lib "zeromq/tests/sync-interleave.rkt") (lib "zeromq/tests/hello.rkt") (lib "zeromq/tests/pub-sub.rkt") (lib "zeromq/tests/two-threads.rkt") (lib "zeromq/tests/client-server.rkt") (lib "zeromq/tests/errors.rkt") (lib "zeromq/tests/sync-wakeup.rkt"))) (name . "zeromq-r") (ring . 1) (rt-dependencies . (("base" #:version "6.10") "zeromq-r-lib" "rackunit-lib")) (search-terms . #hasheq((:build-success: . #t) (:docs: . #t) (author:ryanc@racket-lang.org . #t) (net . #t) (ring:1 . #t))) (source . "http://github.com/rmculpepper/racket-zeromq/tree/master?path=zeromq-r") (tags . ("net")) (versions . #hash((default . #hasheq((checksum . "5917ef00278433cf4d953632a13744b6d826cae9") (source . "git://github.com/rmculpepper/racket-zeromq?path=zeromq-r") (source_url . "http://github.com/rmculpepper/racket-zeromq/tree/master?path=zeromq-r"))))))