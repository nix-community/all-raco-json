#hasheq((author . "bogdan@defn.io") (authors . ("bogdan@defn.io")) (build . #hash((conflicts-log . #f) (dep-failure-log . #f) (docs . ()) (failure-log . #f) (min-failure-log . #f) (success-log . "server/built/install/kafka-lib.txt") (test-failure-log . #f) (test-success-log . "server/built/test-success/kafka-lib.txt"))) (checksum . "e5a4eebab384c6a80a0fabf05c63b0a89a65979e") (checksum-error . #f) (collection . "kafka") (conflicts . ()) (date-added . 1646996453) (dependencies . ("base" "binfmt" "box-extra-lib" "sasl-lib" "rackunit-lib")) (description . "A client for Apache Kafka. (implementation only)") (implies . ()) (modules . ((lib "kafka/private/serde/join-group.rkt") (lib "kafka/private/serde/sasl-authenticate.rkt") (lib "kafka/main.rkt") (lib "kafka/private/serde/leave-group.rkt") (lib "kafka/private/common.rkt") (lib "kafka/private/serde/metadata.rkt") (lib "kafka/private/serde/heartbeat.rkt") (lib "kafka/private/serde/delete-topics.rkt") (lib "kafka/private/serde/core.rkt") (lib "kafka/private/crc.rkt") (lib "kafka/private/connection.rkt") (lib "kafka/private/error.rkt") (lib "kafka/private/client.rkt") (lib "kafka/private/serde.rkt") (lib "kafka/private/serde/group.rkt") (lib "kafka/private/serde/list-offsets.rkt") (lib "kafka/private/serde/produce.rkt") (lib "kafka/private/serde/commit.rkt") (lib "kafka/private/batch-native.rkt") (lib "kafka/private/serde/fetch-offsets.rkt") (lib "kafka/private/serde/list-groups.rkt") (lib "kafka/producer.rkt") (lib "kafka/private/serde/fetch.rkt") (lib "kafka/private/protocol-native.rkt") (lib "kafka/private/serde/find-coordinator.rkt") (lib "kafka/private/help.rkt") (lib "kafka/private/assignor.rkt") (lib "kafka/private/serde/sync-group.rkt") (lib "kafka/private/serde/sasl-handshake.rkt") (lib "kafka/private/serde/contract.rkt") (lib "kafka/private/serde/describe-groups.rkt") (lib "kafka/consumer.rkt") (lib "kafka/private/batch.rkt") (lib "kafka/private/serde/create-topics.rkt") (lib "kafka/private/record.rkt"))) (name . "kafka-lib") (ring . 1) (search-terms . #hasheq((:build-success: . #t) (author:bogdan@defn.io . #t) (distributed-log . #t) (kafka . #t) (net . #t) (ring:1 . #t))) (source . "https://github.com/Bogdanp/racket-kafka.git?path=kafka-lib") (tags . ("distributed-log" "kafka" "net")) (versions . #hash((default . #hasheq((checksum . "e5a4eebab384c6a80a0fabf05c63b0a89a65979e") (source . "https://github.com/Bogdanp/racket-kafka.git?path=kafka-lib") (source_url . "https://github.com/Bogdanp/racket-kafka.git?path=kafka-lib"))))))