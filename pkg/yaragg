#hasheq((author . "jackhfirth@gmail.com") (authors . ("jackhfirth@gmail.com")) (build . #hash((conflicts-log . #f) (dep-failure-log . #f) (docs . (("main" "yaragg-parser-tools" "doc/yaragg-parser-tools@yaragg/index.html") ("main" "yaragg" "doc/yaragg@yaragg/index.html"))) (failure-log . #f) (min-failure-log . #f) (success-log . "server/built/install/yaragg.txt") (test-failure-log . #f) (test-success-log . "server/built/test-success/yaragg.txt"))) (checksum . "2d7ac3fb2add51111689ca9ab044783aa49a008d") (checksum-error . #f) (collection . "yaragg") (conflicts . ()) (date-added . 1684268558) (dependencies . ("base" "rebellion" "syntax-color-lib" "at-exp-lib" "racket-doc" "rackunit-lib" "scribble-lib" "syntax-color-doc")) (description . "Yet another Racket AST generator generator.") (implies . ()) (license . #f) (modules . ((lib "yaragg/examples/codepoints.rkt") (lib "yaragg/lexer.rkt") (lib "yaragg/rules/lexer.rkt") (lib "yaragg/examples/simple-line-drawing/lexer.rkt") (lib "yaragg/examples/simple-line-drawing.rkt") (lib "yaragg/tests/test-weird-grammar.rkt") (lib "yaragg/examples/baby-json.rkt") (lib "yaragg/tests/test-nested-repeats.rkt") (lib "yaragg/support.rkt") (lib "yaragg/examples/baby-json-alt2.rkt") (lib "yaragg/parser-tools/private-yacc/yacc-helper.rkt") (lib "yaragg/parser-tools/private-lex/front.rkt") (lib "yaragg/parser-tools/lex.rkt") (lib "yaragg/parser-tools/yacc.rkt") (lib "yaragg/tests/test-simple-line-drawing.rkt") (lib "yaragg/base/grammar.scrbl") (lib "yaragg/parser.rkt") (lib "yaragg/private/hash.rkt") (lib "yaragg/tests/test-0n1.rkt") (lib "yaragg/tests/test-whitespace.rkt") (lib "yaragg/rules/stx-types.rkt") (lib "yaragg/examples/top-level-cut-1.rkt") (lib "yaragg/examples/wordy.rkt") (lib "yaragg/parser-tools/private-yacc/parser-builder.rkt") (lib "yaragg/examples/nested-word-list.rkt") (lib "yaragg/examples/cutter.rkt") (lib "yaragg/parser-tools/private-yacc/input-file-parser.rkt") (lib "yaragg/examples/simple-line-drawing/lang/reader.rkt") (lib "yaragg/tests/test-old-token.rkt") (lib "yaragg/base/derivation.rkt") (lib "yaragg/examples/statlist-grammar.rkt") (lib "yaragg/examples/01-equal.rkt") (lib "yaragg/examples/simple-line-drawing/examples/letter-i.rkt") (lib "yaragg/examples/nested-repeats.rkt") (lib "yaragg/tests/test-flatten.rkt") (lib "yaragg/parser-tools/private-lex/actions.rkt") (lib "yaragg/lexer/private/regular-match.rkt") (lib "yaragg/examples/empty-symbol.rkt") (lib "yaragg/tests/test-empty-symbol.rkt") (lib "yaragg/parser-tools/lex-plt-v200.rkt") (lib "yaragg/examples/curly-quantifier.rkt") (lib "yaragg/private/indenter.rkt") (lib "yaragg/parser-tools/examples/read.rkt") (lib "yaragg/base/production-expression.rkt") (lib "yaragg/parser-tools/private-yacc/table.rkt") (lib "yaragg/parser-tools/private-lex/stx.rkt") (lib "yaragg/tests/test-codepoints.rkt") (lib "yaragg/tests/test-curly-quantifier.rkt") (lib "yaragg/codegen/codegen.rkt") (lib "yaragg/tests/test-cutter-another.rkt") (lib "yaragg/private/colorer.rkt") (lib "yaragg/examples/0n1.rkt") (lib "yaragg/tests/test-cutter.rkt") (lib "yaragg/tests/test-wordy.rkt") (lib "yaragg/tests/test-baby-json-hider.rkt") (lib "yaragg/tests/test-errors.rkt") (lib "yaragg/codegen/reader.rkt") (lib "yaragg/tests/test-start-and-atok.rkt") (lib "yaragg/parser-tools/cfg-parser.rkt") (lib "yaragg/codegen/expander.rkt") (lib "yaragg/examples/cutter-another.rkt") (lib "yaragg/parser-tools/private-lex/deriv.rkt") (lib "yaragg/examples/simple-arithmetic-grammar.rkt") (lib "yaragg/tests/test-0n1n.rkt") (lib "yaragg/examples/baby-json-hider.rkt") (lib "yaragg/tests/test-make-rule-parser.rkt") (lib "yaragg/codegen/runtime.rkt") (lib "yaragg/parser-tools/private-lex/token-syntax.rkt") (lib "yaragg/tests/test-hide-and-splice.rkt") (lib "yaragg/examples/top-level-cut-2.rkt") (lib "yaragg/examples/bnf.rkt") (lib "yaragg/parser-tools/private-lex/token.rkt") (lib "yaragg/examples/baby-json-alt.rkt") (lib "yaragg/tests/test-lexer.rkt") (lib "yaragg/parser/earley.rkt") (lib "yaragg/rules/parser.rkt") (lib "yaragg/parser-tools/private-lex/unicode-chars.rkt") (lib "yaragg/parser-tools/examples/calc.rkt") (lib "yaragg/base/grammar.rkt") (lib "yaragg/parser-tools/private-yacc/lr0.rkt") (lib "yaragg/parser-tools/private-yacc/parser-actions.rkt") (lib "yaragg/codegen/flatten.rkt") (lib "yaragg/yaragg.scrbl") (lib "yaragg/private/port.rkt") (lib "yaragg/parser-tools/private-lex/error-tests.rkt") (lib "yaragg/examples/0n1n.rkt") (lib "yaragg/parser-tools/lex-sre.rkt") (lib "yaragg/examples/whitespace.rkt") (lib "yaragg/codegen/satisfaction.rkt") (lib "yaragg/tests/test-01-equal.rkt") (lib "yaragg/examples/add-mult.rkt") (lib "yaragg/examples/simple-line-drawing/semantics.rkt") (lib "yaragg/examples/lua-parser.rkt") (lib "yaragg/parser-tools/private-lex/re.rkt") (lib "yaragg/rules/stx.rkt") (lib "yaragg/base/production-expression.scrbl") (lib "yaragg/tests/weird-grammar.rkt") (lib "yaragg/main.rkt") (lib "yaragg/tests/test-simple-arithmetic-grammar.rkt") (lib "yaragg/parser-tools/private-lex/util.rkt") (lib "yaragg/examples/quotation-marks-and-backslashes.rkt") (lib "yaragg/examples/simple-line-drawing/interpret.rkt") (lib "yaragg/base/token.scrbl") (lib "yaragg/private/internal-support.rkt") (lib "yaragg/parser-tools/private-yacc/lalr.rkt") (lib "yaragg/parser-tools/private-yacc/grammar.rkt") (lib "yaragg/yaragg-parser-tools.scrbl") (lib "yaragg/base/token.rkt") (lib "yaragg/tests/test-quotation-marks-and-backslashes.rkt") (lib "yaragg/examples/hide-and-splice.rkt") (lib "yaragg/lexer/private/regular-pattern.rkt") (lib "yaragg/tests/test-top-level-cut.rkt") (lib "yaragg/tests/test-baby-json.rkt") (lib "yaragg/rules/rule-structs.rkt") (lib "yaragg/examples/subrule.rkt") (lib "yaragg/tests/test-parser.rkt") (lib "yaragg/lexer/private/regex-vm.rkt") (lib "yaragg/parser-tools/private-yacc/graph.rkt") (lib "yaragg/examples/simple-line-drawing/grammar.rkt") (lib "yaragg/base/semantic-action.rkt") (lib "yaragg/examples/top-level-cut-3.rkt") (lib "yaragg/examples/start-and-atok.rkt"))) (name . "yaragg") (ring . 2) (rt-dependencies . (("base" #:version "6.3") "rebellion" "syntax-color-lib")) (search-terms . #hasheq((:build-success: . #t) (:docs: . #t) (author:jackhfirth@gmail.com . #t) (parsing . #t) (ring:2 . #t))) (source . "https://github.com/jackfirth/yaragg.git#master") (tags . ("parsing")) (versions . #hash((default . #hasheq((checksum . "2d7ac3fb2add51111689ca9ab044783aa49a008d") (source . "https://github.com/jackfirth/yaragg.git#master") (source_url . "https://github.com/jackfirth/yaragg.git#master"))))))