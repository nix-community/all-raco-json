#hasheq((author . "lexi.lambda@gmail.com") (authors . ("lexi.lambda@gmail.com")) (build . #hash((conflicts-log . #f) (dep-failure-log . #f) (docs . ()) (failure-log . "server/built/fail/hackett-test.txt") (min-failure-log . #f) (success-log . #f) (test-failure-log . #f) (test-success-log . #f))) (checksum . "e90ace9e4a056ec0a2a267f220cb29b756cbefce") (checksum-error . #f) (collection . (multi)) (conflicts . ()) (date-added . 1548924852) (dependencies . ("base" "hackett-lib" "rackunit-lib" "sandbox-lib" "testing-util-lib")) (description . "") (implies . ()) (license . #f) (modules . ((lib "tests/hackett/integration/int-pattern.rkt") (lib "hackett/private/test.rkt") (lib "tests/hackett/regression/lazy-case.rkt") (lib "tests/hackett/integration/laar-lens.rkt") (lib "tests/hackett/typecheck.rkt") (lib "tests/hackett/regression/github-issue-46.rkt") (lib "tests/hackett/regression/github-issue-36.rkt") (lib "tests/hackett/regression/github-issue-63.rkt") (lib "tests/hackett/integration/top-level-recursive-def.rkt") (lib "tests/hackett/integration/typeclass-instance-context-reduction.rkt") (lib "tests/hackett/regression/github-issue-85.rkt") (lib "tests/hackett/integration/scoped-type-variables.rkt") (lib "tests/hackett/integration/pattern-alias.rkt") (lib "tests/hackett/integration/variadic-list.rkt") (lib "tests/hackett/integration/fundeps-arithmetic.rkt") (lib "tests/hackett/integration/generalize.rkt") (lib "tests/hackett/regression/github-issue-60.rkt") (lib "tests/hackett/integration/str-pattern.rkt") (lib "tests/hackett/integration/type-alias.rkt") (lib "tests/hackett/integration/pattern-app.rkt") (lib "tests/hackett/integration/multi-param-typeclasses.rkt") (lib "tests/hackett/integration/recursive-unannotated-definition.rkt"))) (name . "hackett-test") (ring . 1) (rt-dependencies . ("base" "hackett-lib" "rackunit-lib" "sandbox-lib" "testing-util-lib")) (search-terms . #hasheq((:build-fail: . #t) (:no-desc: . #t) (:no-tag: . #t) (author:lexi.lambda@gmail.com . #t) (ring:1 . #t))) (source . "https://github.com/lexi-lambda/hackett.git?path=hackett-test") (tags . ()) (versions . #hash((default . #hasheq((checksum . "e90ace9e4a056ec0a2a267f220cb29b756cbefce") (source . "https://github.com/lexi-lambda/hackett.git?path=hackett-test") (source_url . "https://github.com/lexi-lambda/hackett.git?path=hackett-test"))))))