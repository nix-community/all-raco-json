#hasheq((author . "rokitna@hotmail.com arc.racket@akkartik.com zkanfer@gmail.com") (authors . ("rokitna@hotmail.com" "arc.racket@akkartik.com" "zkanfer@gmail.com")) (build . #hash((conflicts-log . #f) (dep-failure-log . #f) (docs . (("main" "anarki" "doc/anarki@anarki/index.html"))) (failure-log . #f) (min-failure-log . #f) (success-log . "server/built/install/anarki.txt") (test-failure-log . #f) (test-success-log . "server/built/test-success/anarki.txt"))) (checksum . "e49b1bfe1f7bf0e682d360eb677947264000de82") (checksum-error . #f) (collection . "anarki") (conflicts . ()) (dependencies . ("base" "sha" "racket-doc" "scribble-lib")) (description . "Community-managed variant of the Arc dialect of Lisp") (implies . ()) (license . #f) (modules . ((lib "anarki/lib/racket-lang-demo/racket-deep-dependency.rkt") (lib "anarki/lib/racket-lang-demo/lang-anarki-application.rkt") (lib "anarki/lib/racket-lang-demo/lang-anarki-deep-dependency.rkt") (lib "anarki/lang/reader.rkt") (lib "anarki/main.rkt") (lib "anarki/lib/racket-lang-demo/lang-anarki-library.rkt") (lib "anarki/ac.rkt") (lib "anarki/lib/uuid.rkt") (lib "anarki/brackets.rkt") (lib "anarki/boot.rkt") (lib "anarki/lang/module-begin.rkt") (lib "anarki/scribblings/anarki.scrbl") (lib "anarki/lib/racket-lang-demo/racket-application.rkt") (lib "anarki/lib/ns.rkt"))) (name . "anarki") (ring . 1) (rt-dependencies . ("base" "sha")) (search-terms . #hasheq((:build-success: . #t) (:docs: . #t) (author:arc.racket@akkartik.com . #t) (author:arc.racketλ3a961e3 . #t) (author:rokitna@hotmail.com . #t) (author:rokitnaλ37fb1cf . #t) (author:zkanfer@gmail.com . #t) (author:zkanferλc60c434 . #t) (language . #t) (ring:1 . #t) (unstable . #t) (web . #t))) (source . "http://github.com/arclanguage/anarki/tree/master") (tags . ("language" "unstable" "web")) (versions . #hash((default . #hasheq((checksum . "e49b1bfe1f7bf0e682d360eb677947264000de82") (source . "git://github.com/arclanguage/anarki") (source_url . "http://github.com/arclanguage/anarki/tree/master"))))))