#hasheq((author . "leo@lwh.jp") (authors . ("leo@lwh.jp")) (build . #hash((conflicts-log . #f) (dep-failure-log . #f) (docs . (("main" "asm" "doc/asm@asm/index.html"))) (failure-log . #f) (min-failure-log . #f) (success-log . "server/built/install/asm.txt") (test-failure-log . "server/built/test-fail/asm.txt") (test-success-log . #f))) (checksum . "57abd235fcb8c7505990f8e9731c01c716324ee5") (checksum-error . #f) (collection . "asm") (conflicts . ()) (dependencies . ("base" "binutils" "data-lib" "racklog" "racket-doc" "rackunit-lib" "scribble-lib")) (description . "A multi-platform assembler for Racket (supports x64 and generic instruction sets)") (implies . ()) (license . #f) (modules . ((lib "asm/example/ifib.rkt") (lib "asm/example/rfib.rkt") (lib "asm/generic/generic-asm-sig.rkt") (lib "asm/x86/op.rkt") (lib "asm/x86/private/mode.rkt") (lib "asm/x86/private/encode.rkt") (lib "asm/x86/private/opcode-map.rkt") (lib "asm/example/rpn.rkt") (lib "asm/scribblings/generic.scrbl") (lib "asm/example/fibonacci.rkt") (lib "asm/main.rkt") (lib "asm/generic.rkt") (lib "asm/x86/disasm.rkt") (lib "asm/x86/private/x86.rkt") (lib "asm/x86/kernel.rkt") (lib "asm/example/hello.rkt") (lib "asm/scribblings/ffi.scrbl") (lib "asm/x86/register.rkt") (lib "asm/x86/private/register.rkt") (lib "asm/scribblings/x86.scrbl") (lib "asm/example/incr.rkt") (lib "asm/scribblings/asm.scrbl") (lib "asm/ffi.rkt") (lib "asm/base.rkt") (lib "asm/x86/ndisasm.rkt") (lib "asm/x86.rkt") (lib "asm/generic/generic-x86-unit.rkt") (lib "asm/x86/test.rkt") (lib "asm/scribblings/assembler.scrbl") (lib "asm/x86/private/racklog-lib.rkt") (lib "asm/private/assembler.rkt") (lib "asm/x86/private/operand.rkt") (lib "asm/x86/private/instruction.rkt") (lib "asm/x86/private/decode.rkt"))) (name . "asm") (readme-url . "https://github.com/lwhjp/racket-asm/tree/HEAD/README.md") (ring . 1) (rt-dependencies . ("base" "binutils" "data-lib" "racklog")) (search-terms . #hasheq((:build-success: . #t) (:docs: . #t) (assembler . #t) (author:leo@lwh.jp . #t) (author:leoÎ»f7de743 . #t) (ffi . #t) (ring:1 . #t) (unstable . #t))) (source . "http://github.com/lwhjp/racket-asm/tree/master") (tags . ("assembler" "ffi" "unstable")) (versions . #hash((default . #hasheq((checksum . "57abd235fcb8c7505990f8e9731c01c716324ee5") (source . "git://github.com/lwhjp/racket-asm") (source_url . "http://github.com/lwhjp/racket-asm/tree/master"))))))