#hasheq((author . "lexi.lambda@gmail.com") (authors . ("lexi.lambda@gmail.com")) (build . #hash((conflicts-log . #f) (dep-failure-log . #f) (docs . ()) (failure-log . #f) (min-failure-log . #f) (success-log . "server/built/install/multimethod-lib.txt") (test-failure-log . #f) (test-success-log . "server/built/test-success/multimethod-lib.txt"))) (checksum . "8a0903ebaedd919971c382eeb785f05080c7a8d6") (checksum-error . #f) (collection . (multi)) (conflicts . ()) (dependencies . ("base" "rackunit-lib" "rackunit-spec")) (description . "") (implies . ()) (modules . ((lib "multimethod/multimethod.rkt") (lib "multimethod/main.rkt") (lib "multimethod/privilege.rkt"))) (name . "multimethod-lib") (ring . 1) (search-terms . #hasheq((:build-success: . #t) (:no-desc: . #t) (:no-tag: . #t) (author:lexi.lambda@gmail.com . #t) (ring:1 . #t))) (source . "http://github.com/lexi-lambda/racket-multimethod/tree/master?path=multimethod-lib") (tags . ()) (versions . #hash((default . #hasheq((checksum . "8a0903ebaedd919971c382eeb785f05080c7a8d6") (source . "git://github.com/lexi-lambda/racket-multimethod?path=multimethod-lib") (source_url . "http://github.com/lexi-lambda/racket-multimethod/tree/master?path=multimethod-lib"))))))