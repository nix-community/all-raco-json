#hasheq((author . "sorawee.pwase@gmail.com") (authors . ("sorawee.pwase@gmail.com")) (build . #hash((conflicts-log . #f) (dep-failure-log . #f) (docs . (("main" "pretty-expressive" "doc/pretty-expressive@pretty-expressive/index.html"))) (failure-log . #f) (min-failure-log . #f) (success-log . "server/built/install/pretty-expressive.txt") (test-failure-log . #f) (test-success-log . "server/built/test-success/pretty-expressive.txt"))) (checksum . "dca2c7042550a1bf437d5e43fabe5326296da5b1") (checksum-error . #f) (collection . "pretty-expressive") (conflicts . ()) (date-added . 1689121842) (dependencies . ("base" "scribble-lib" "racket-doc" "rackunit-lib")) (description . "A pretty expressive printer") (implies . ()) (license . "(Apache-2.0 OR MIT)") (modules . ((lib "pretty-expressive/benchmarks/json.rkt") (lib "pretty-expressive/core.rkt") (lib "pretty-expressive/benchmarks/sexp-random.rkt") (lib "pretty-expressive/benchmarks/sexp-full.rkt") (lib "pretty-expressive/benchmarks/concat.rkt") (lib "pretty-expressive/doc.rkt") (lib "pretty-expressive/addons.rkt") (lib "pretty-expressive/scribblings/pretty-expressive.scrbl") (lib "pretty-expressive/benchmarks/fill-sep.rkt") (lib "pretty-expressive/main.rkt") (lib "pretty-expressive/benchtool.rkt") (lib "pretty-expressive/benchmarks/flatten.rkt") (lib "pretty-expressive/benchmarks/wadler-opt.rkt") (lib "pretty-expressive/examples.rkt") (lib "pretty-expressive/process.rkt") (lib "pretty-expressive/promise.rkt"))) (name . "pretty-expressive") (ring . 1) (rt-dependencies . ("base")) (search-terms . #hasheq((:build-success: . #t) (:docs: . #t) (author:sorawee.pwase@gmail.com . #t) (author:sorawee.pwaseÎ»2a807e3 . #t) (pretty-printer . #t) (ring:1 . #t))) (source . "https://github.com/sorawee/pretty-expressive.git#main") (tags . ("pretty-printer")) (versions . #hash((default . #hasheq((checksum . "dca2c7042550a1bf437d5e43fabe5326296da5b1") (source . "https://github.com/sorawee/pretty-expressive.git#main") (source_url . "https://github.com/sorawee/pretty-expressive.git#main"))))))