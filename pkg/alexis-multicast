#hasheq((author . "lexi.lambda@gmail.com") (authors . ("lexi.lambda@gmail.com")) (build . #hash((conflicts-log . #f) (dep-failure-log . "server/built/deps/alexis-multicast.txt") (docs . (("main" "alexis-multicast" "doc/alexis-multicast@alexis-multicast/index.html"))) (failure-log . #f) (min-failure-log . #f) (success-log . "server/built/install/alexis-multicast.txt") (test-failure-log . #f) (test-success-log . "server/built/test-success/alexis-multicast.txt"))) (checksum . "0268afb688231e0d6d76ded3291538dd5d3db37c") (checksum-error . #f) (collection . (multi)) (conflicts . ()) (dependencies . ("base" "alexis-util" "rackunit-lib" "cover" "cover-coveralls" "racket-doc" "scribble-lib")) (description . "One-to-many buffered  asynchronous channels") (implies . ()) (license . #f) (modules . ((lib "alexis/private/test/multicast.rkt") (lib "alexis/multicast.rkt") (lib "alexis/scribblings/alexis-multicast.scrbl"))) (name . "alexis-multicast") (ring . 1) (rt-dependencies . ("base" "alexis-util")) (search-terms . #hasheq((:build-dep-fail: . #t) (:build-success: . #t) (:docs: . #t) (:no-tag: . #t) (author:lexi.lambda@gmail.com . #t) (ring:1 . #t))) (source . "http://github.com/lexi-lambda/racket-alexis.git/tree/master?path=alexis-multicast") (tags . ()) (versions . #hash((default . #hasheq((checksum . "0268afb688231e0d6d76ded3291538dd5d3db37c") (source . "git://github.com/lexi-lambda/racket-alexis.git?path=alexis-multicast") (source_url . "http://github.com/lexi-lambda/racket-alexis.git/tree/master?path=alexis-multicast"))))))