#hasheq((author . "dbenoit@fedoraproject.org") (authors . ("dbenoit@fedoraproject.org")) (build . #hash((conflicts-log . #f) (dep-failure-log . #f) (docs . (("main" "dynamic-ffi" "doc/dynamic-ffi@dynamic-ffi/index.html"))) (failure-log . #f) (min-failure-log . #f) (success-log . "server/built/install/dynamic-ffi.txt") (test-failure-log . #f) (test-success-log . "server/built/test-success/dynamic-ffi.txt"))) (checksum . "a1ab6473c8911226bd97fffa19b31c0bc641ca12") (checksum-error . #f) (collection . "dynamic-ffi") (conflicts . ()) (date-added . 1558910128) (dependencies . ("base" "rackunit-lib" "racket-doc" "rackunit-lib" "at-exp-lib" "scribble-lib" "scribble-doc")) (description . "Dynamically generate FFI bindings to C, and write C code inline in your Racket programs.") (implies . ()) (license . #f) (modules . ((lib "dynamic-ffi/test/inline.rkt") (lib "dynamic-ffi/make.rkt") (lib "dynamic-ffi/main.rkt") (lib "dynamic-ffi/cached.rkt") (lib "dynamic-ffi/inline.rkt") (lib "dynamic-ffi/scribblings/dynamic-ffi.scrbl") (lib "dynamic-ffi/unsafe.rkt") (lib "dynamic-ffi/test/manual/generate.rkt") (lib "dynamic-ffi/meta.rkt") (lib "dynamic-ffi/runtime-paths.rkt") (lib "dynamic-ffi/test/typedef-struct.rkt") (lib "dynamic-ffi/ffi.rkt") (lib "dynamic-ffi/common.rkt") (lib "dynamic-ffi/test/libc.rkt") (lib "dynamic-ffi/export.rkt"))) (name . "dynamic-ffi") (ring . 1) (rt-dependencies . ("base" "rackunit-lib")) (search-terms . #hasheq((:build-success: . #t) (:docs: . #t) (C . #t) (author:dbenoit@fedoraproject.org . #t) (dynamic . #t) (ffi . #t) (language . #t) (programming . #t) (ring:1 . #t))) (source . "https://github.com/dbenoit17/dynamic-ffi.git#release-v1.1") (tags . ("C" "dynamic" "ffi" "language" "programming")) (versions . #hash((default . #hasheq((checksum . "a1ab6473c8911226bd97fffa19b31c0bc641ca12") (source . "https://github.com/dbenoit17/dynamic-ffi.git#release-v1.1") (source_url . "https://github.com/dbenoit17/dynamic-ffi.git#release-v1.1"))))))