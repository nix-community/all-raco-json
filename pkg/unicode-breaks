#hasheq((author . "shawnw.mobile@gmail.com") (authors . ("shawnw.mobile@gmail.com")) (build . #hash((conflicts-log . #f) (dep-failure-log . #f) (docs . (("main" "unicode-breaks" "doc/unicode-breaks@unicode-breaks/index.html"))) (failure-log . #f) (min-failure-log . #f) (success-log . "server/built/install/unicode-breaks.txt") (test-failure-log . #f) (test-success-log . "server/built/test-success/unicode-breaks.txt"))) (checksum . "20c30a4a0d8991c9af078e92856590e09af190e0") (checksum-error . #f) (collection . (multi)) (conflicts . ()) (date-added . 1668685547) (dependencies . ("base" "srfi-lib" "racket" "scribble-lib" "racket-doc" "rackunit-lib")) (description . "Convenience functions for working with grapheme clusters, and splitting text using the Unicode word break algorithm.") (implies . ()) (license . "(Apache-2.0 OR MIT)") (modules . ((lib "unicode-breaks/private/sentence-break-tests.rkt") (lib "scripts/common.rkt") (lib "scripts/make-wordbreak-db.rkt") (lib "unicode-breaks/private/sentence-break-categories.rkt") (lib "scripts/make-sentencebreak-db.rkt") (lib "scripts/make-wordbreak-tests.rkt") (lib "unicode-breaks/main.rkt") (lib "unicode-breaks/private/word-break-categories.rkt") (lib "unicode-breaks/private/eaw-categories.rkt") (lib "scripts/make-eaw-db.rkt") (lib "scripts/make-sentencebreak-tests.rkt") (lib "unicode-breaks/private/word-break-tests.rkt") (lib "unicode-breaks/scribblings/unicode-breaks.scrbl"))) (name . "unicode-breaks") (ring . 1) (rt-dependencies . ("base" "srfi-lib" ("racket" #:version "8.13"))) (search-terms . #hasheq((:build-success: . #t) (:docs: . #t) (author:shawnw.mobile@gmail.com . #t) (author:shawnw.mobileÎ»7a25116 . #t) (ring:1 . #t) (text . #t) (unicode . #t))) (source . "https://github.com/shawnw/racket-unicode-breaks.git") (tags . ("text" "unicode")) (versions . #hash((default . #hasheq((checksum . "20c30a4a0d8991c9af078e92856590e09af190e0") (source . "https://github.com/shawnw/racket-unicode-breaks.git") (source_url . "https://github.com/shawnw/racket-unicode-breaks.git"))))))