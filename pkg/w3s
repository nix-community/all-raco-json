#hasheq((author . "juzhenliang@gmail.com") (authors . ("juzhenliang@gmail.com")) (build . #hash((conflicts-log . #f) (dep-failure-log . #f) (docs . (("none" "css") ("none" "sgml") ("none" "svg"))) (failure-log . #f) (min-failure-log . #f) (success-log . "server/built/install/w3s.txt") (test-failure-log . "server/built/test-fail/w3s.txt") (test-success-log . #f))) (checksum . "e06b39a02b37a2bc15a56b572ad80d62823b17c8") (checksum-error . #f) (collection . (multi)) (conflicts . ()) (dependencies . ("base" "digimon" "graphics" "typed-racket-lib" "typed-racket-more" "scribble-lib" "racket-doc" "typed-racket-doc" "digimon" "graphics")) (description . "W3 Standards Implemented in Typed Racket") (implies . ()) (license . #f) (modules . ((lib "sgml/tamer/sax.rkt") (lib "css/digitama/syntax/selector.rkt") (lib "css/digitama/color.rkt") (lib "sgml/digitama/relaxng/simplification.rkt") (lib "sgml/digitama/grammar.rkt") (lib "sgml/tamer/rnc/rnc.rkt") (lib "sgml/tamer/xml.rkt") (lib "sgml/digitama/shared/datatype.rkt") (lib "sgml/digitama/schema.rkt") (lib "css/tamer/specificity.rkt") (lib "css/digitama/syntax/condition.rkt") (lib "sgml/tamer/validity.rkt") (lib "sgml/dtd.rkt") (lib "sgml/digitama/validity.rkt") (lib "sgml/digitama/dialect.rkt") (lib "sgml/digivice/iana.rkt") (lib "css/digitama/syntax/variables.rkt") (lib "sgml/tamer/sgml.scrbl") (lib "sgml/tamer/document.scrbl") (lib "css/digitama/background.rkt") (lib "svg/tamer/spec/datatype.rkt") (lib "css/digitama/syntax/digicore.rkt") (lib "sgml/digitama/shared/dialect.rkt") (lib "css/values.rkt") (lib "sgml/digitama/document.rkt") (lib "sgml/digitama/xexpr/sax/handler/writer.rkt") (lib "css/digitama/syntax/tokenizer.rkt") (lib "sgml/digitama/prentity.rkt") (lib "css/base.rkt") (lib "sgml/digitama/tokenizer/delimiter.rkt") (lib "css/digitama/device-adapt.rkt") (lib "css/digitama/text-decor.rkt") (lib "sgml/village/sgmlang/reader.rkt") (lib "sgml/tamer/namespace.rkt") (lib "css/font.rkt") (lib "css/village/hashlang/indentation.rkt") (lib "svg/tamer/svgdoc/attgroup.rkt") (lib "svg/digitama/grammar/attribute.rkt") (lib "sgml/digitama/normalize.rkt") (lib "sgml/digitama/tokenizer/port.rkt") (lib "css/bonus.rkt") (lib "sgml/digitama/space.rkt") (lib "sgml/digitama/dtd.rkt") (lib "sgml/xsd.rkt") (lib "css/digitama/syntax/misc.rkt") (lib "sgml/digitama/whitespace.rkt") (lib "sgml/village/sgmlang/indentation.rkt") (lib "css/background.rkt") (lib "sgml/digitama/convert.rkt") (lib "css/tamer/css.scrbl") (lib "sgml/digitama/tokenizer.rkt") (lib "css/tamer/bitmap.rkt") (lib "css/racket.rkt") (lib "css/digitama/syntax/stdin.rkt") (lib "sgml/digitama/doctype.rkt") (lib "sgml/digitama/relaxng.rkt") (lib "css/color.rkt") (lib "css/tamer/configure.rkt") (lib "sgml/sax.rkt") (lib "svg/tamer/svg.scrbl") (lib "sgml/digitama/xexpr/whitespace.rkt") (lib "css/digitama/syntax/cascade.rkt") (lib "css/digitama/image.rkt") (lib "svg/village/svglang/reader.rkt") (lib "svg/main.rkt") (lib "sgml/village/sgmlang/lexer.rkt") (lib "css/syntax.rkt") (lib "svg/tamer/svgdoc/attlist.rkt") (lib "css/village/cascade.rkt") (lib "sgml/digitama/misc.rkt") (lib "css/main.rkt") (lib "sgml/tamer/performace/normalize.rkt") (lib "sgml/digitama/relaxng/compact.rkt") (lib "svg/digitama/document.rkt") (lib "sgml/digitama/datatype.rkt") (lib "svg/tamer/svgdoc/svg.rkt") (lib "sgml/digitama/xexpr/sax.rkt") (lib "css/text-decor.rkt") (lib "css/digitama/syntax/parser.rkt") (lib "css/sugar.rkt") (lib "sgml/digitama/tokenizer/errno.rkt") (lib "sgml/digitama/tokenizer/characters.rkt") (lib "css/village/hashlang/lexer.rkt") (lib "sgml/digitama/xexpr/xexpr.rkt") (lib "sgml/digitama/digicore.rkt") (lib "sgml/xml.rkt") (lib "css/recognizer.rkt") (lib "sgml/digitama/stdin.rkt") (lib "sgml/digitama/xexpr/normalize.rkt") (lib "css/village/hashlang/w3s.rkt") (lib "css/digitama/font.rkt") (lib "sgml/rnc.rkt") (lib "css/tamer/recognizer.rkt") (lib "css/digitama/syntax/unsafe/cascade.rkt") (lib "sgml/digitama/relaxng/schema.rkt") (lib "css/tamer/syntax.rkt") (lib "sgml/digitama/xexpr/dialect.rkt") (lib "svg/tamer/svgdoc/category.rkt") (lib "css/tamer/media.rkt") (lib "sgml/digitama/shared/enum.rkt") (lib "sgml/tamer/whitespace.rkt") (lib "sgml/digitama/xexpr/grammar.rkt") (lib "svg/digitama/grammar.rkt") (lib "css/image.rkt") (lib "sgml/digitama/xexpr/prompt.rkt") (lib "sgml/digitama/xexpr/datatype.rkt") (lib "sgml/digitama/relaxng/rnc.rkt") (lib "sgml/digitama/namespace.rkt") (lib "svg/tamer/svgdoc/element.rkt") (lib "css/digitama/syntax/grammar.rkt") (lib "css/village/hashlang/reader.rkt") (lib "svg/digitama/grammar/datatype.rkt") (lib "sgml/digitama/relaxng/recognizer.rkt") (lib "css/digitama/syntax/dimension.rkt") (lib "sgml/xexpr.rkt"))) (name . "w3s") (ring . 1) (rt-dependencies . ("base" "digimon" "graphics" "typed-racket-lib" "typed-racket-more")) (search-terms . #hasheq((:build-success: . #t) (:docs-error: . #t) (author:juzhenliang@gmail.com . #t) (author:juzhenliangÎ»b3710bd . #t) (css . #t) (parser . #t) (ring:1 . #t) (svg . #t) (typed-racket . #t) (unstable . #t) (w3 . #t) (xml . #t))) (source . "https://github.com/wargrey/w3s.git") (tags . ("css" "parser" "svg" "typed-racket" "unstable" "w3" "xml")) (versions . #hash((default . #hasheq((checksum . "e06b39a02b37a2bc15a56b572ad80d62823b17c8") (source . "https://github.com/wargrey/w3s.git") (source_url . "https://github.com/wargrey/w3s.git"))))))