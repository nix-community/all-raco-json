#hasheq((author . "lexi.lambda@gmail.com") (authors . ("lexi.lambda@gmail.com")) (build . #hash((conflicts-log . #f) (dep-failure-log . "server/built/deps/alexis-collections.txt") (docs . (("main" "alexis-collections" "doc/alexis-collections@alexis-collections/index.html"))) (failure-log . #f) (min-failure-log . #f) (success-log . "server/built/install/alexis-collections.txt") (test-failure-log . "server/built/test-fail/alexis-collections.txt") (test-success-log . #f))) (checksum . "997c8642d9b2adb28728d609202618bc8ffbd750") (checksum-error . #f) (collection . (multi)) (conflicts . ()) (dependencies . ("alexis-util" "base" "collections" "rackunit-lib" "racket-doc" "scribble-lib")) (description . "Deprecated. Use the collections package instead.") (implies . ("collections")) (license . #f) (modules . ((lib "alexis/collection/private/test/dict.rkt") (lib "alexis/scribblings/alexis-collections.scrbl") (lib "alexis/collection.rkt") (lib "alexis/collection/private/test/sequence.rkt") (lib "alexis/collection/private/test/sequence-lib.rkt") (lib "alexis/collection/private/test/contract.rkt") (lib "alexis/collection/private/test/match.rkt") (lib "alexis/collection/private/test/collection.rkt"))) (name . "alexis-collections") (readme-url . "https://github.com/lexi-lambda/racket-alexis-collections/tree/HEAD/README.md") (ring . 1) (rt-dependencies . ("alexis-util" "base" "collections" "rackunit-lib")) (search-terms . #hasheq((:build-dep-fail: . #t) (:build-success: . #t) (:docs: . #t) (author:lexi.lambda@gmail.com . #t) (author:lexi.lambdaÎ»81999a1 . #t) (deprecated . #t) (ring:1 . #t))) (source . "http://github.com/lexi-lambda/racket-alexis-collections/tree/master") (tags . ("deprecated")) (versions . #hash((default . #hasheq((checksum . "997c8642d9b2adb28728d609202618bc8ffbd750") (source . "git://github.com/lexi-lambda/racket-alexis-collections") (source_url . "http://github.com/lexi-lambda/racket-alexis-collections/tree/master"))))))