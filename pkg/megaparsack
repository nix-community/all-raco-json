#hasheq((author . "lexi.lambda@gmail.com") (authors . ("lexi.lambda@gmail.com")) (build . #hash((conflicts-log . #f) (dep-failure-log . #f) (docs . ()) (failure-log . #f) (min-failure-log . #f) (success-log . "server/built/install/megaparsack.txt") (test-failure-log . #f) (test-success-log . "server/built/test-success/megaparsack.txt"))) (checksum . "0ccdee4270da0337700ac62aa106735d0d879695") (checksum-error . #f) (collection . (multi)) (conflicts . ()) (dependencies . ("base" "megaparsack-lib" "megaparsack-doc" "megaparsack-parser" "megaparsack-parser-tools")) (description . "practical parser combinators") (implies . ("megaparsack-lib" "megaparsack-doc" "megaparsack-parser" "megaparsack-parser-tools")) (license . #f) (modules . ()) (name . "megaparsack") (readme-url . "https://github.com/lexi-lambda/megaparsack/tree/HEAD/README.md") (ring . 1) (rt-dependencies . ("base" "megaparsack-lib" "megaparsack-doc" "megaparsack-parser" "megaparsack-parser-tools")) (search-terms . #hasheq((:build-success: . #t) (author:lexi.lambda@gmail.com . #t) (author:lexi.lambdaÎ»81999a1 . #t) (parser . #t) (parsing . #t) (ring:1 . #t))) (source . "http://github.com/lexi-lambda/megaparsack/tree/master?path=megaparsack") (tags . ("parser" "parsing")) (versions . #hash((default . #hasheq((checksum . "0ccdee4270da0337700ac62aa106735d0d879695") (source . "git://github.com/lexi-lambda/megaparsack?path=megaparsack") (source_url . "http://github.com/lexi-lambda/megaparsack/tree/master?path=megaparsack"))))))