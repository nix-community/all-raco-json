#hash((author . "jay@racket-lang.org") (authors . ("jay@racket-lang.org")) (build . #hash((conflicts-log . #f) (dep-failure-log . #f) (docs . (("main" "racklog" "doc/racklog@racklog/index.html"))) (failure-log . #f) (min-failure-log . #f) (success-log . #f) (test-failure-log . #f) (test-success-log . #f))) (checksum . "8d305b82645fad682363b8137421ba1d2f42744f") (checksum-error . #f) (collection . "racklog") (conflicts . ()) (dependencies . ("base" "datalog" "eli-tester" "rackunit-lib" "racket-doc" "scribble-lib")) (description . "The implementation of the Racklog (embedded Prolog) language") (implies . ()) (license . "(Apache-2.0 OR MIT)") (modules . ((lib "racklog/tests/pr/pr1.rkt") (lib "racklog/lang/empty.rkt") (lib "racklog/tests/require.rkt") (lib "racklog/tests/frozen.rkt") (lib "racklog/tests/pr/pr-ed.rkt") (lib "racklog/lang/configure-runtime.rkt") (lib "racklog/main.rkt") (lib "racklog/tests/england.rkt") (lib "racklog/tests/fac.rkt") (lib "racklog/tests/pr/pr12085.rkt") (lib "racklog/tests/pr/pr5.rkt") (lib "racklog/tests/england2.rkt") (lib "racklog/tests/unit.rkt") (lib "racklog/tests/games.rkt") (lib "racklog/tests/lang/laps.rkt") (lib "racklog/tests/lang/says.rkt") (lib "racklog/tests/lang.rkt") (lib "racklog/control.rkt") (lib "racklog/lang/reader.rkt") (lib "racklog/racklog.scrbl") (lib "racklog/unify.rkt") (lib "racklog/lang/lang-info.rkt") (lib "racklog/tests/is.rkt") (lib "racklog/tests/puzzle.rkt") (lib "racklog/tests/toys.rkt") (lib "racklog/tests/houses.rkt") (lib "racklog/tests/bible.rkt") (lib "racklog/tests/lang/long.rkt") (lib "racklog/tests/lang/true.rkt") (lib "racklog/lang/compiler.rkt") (lib "racklog/tests/lang/tutorial.rkt") (lib "racklog/tests/holland.rkt") (lib "racklog/racklog.rkt") (lib "racklog/tests/lang/ancestor.rkt") (lib "racklog/tests/run-all.rkt") (lib "racklog/lang/lang.rkt") (lib "racklog/tests/pr/pr4.rkt") (lib "racklog/tests/mapcol.rkt"))) (name . "racklog") (ring . 0) (rt-dependencies . ("base" "datalog")) (search-terms . #hasheq((:docs: . #t) (author:jay@racket-lang.org . #t) (main-distribution . #t) (ring:0 . #t))) (source . "http://github.com/racket/racklog/tree/master") (tags . ("main-distribution")) (versions . #hash((default . #hasheq((checksum . "8d305b82645fad682363b8137421ba1d2f42744f") (source . "git://github.com/racket/racklog") (source_url . "http://github.com/racket/racklog/tree/master"))))))