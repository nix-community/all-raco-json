#hasheq((author . "johnstonskj@gmail.com") (authors . ("johnstonskj@gmail.com")) (build . #hash((conflicts-log . #f) (dep-failure-log . #f) (docs . (("main" "rml-neural" "doc/rml-neural@rml-neural/index.html"))) (failure-log . #f) (min-failure-log . #f) (success-log . "server/built/install/rml-neural.txt") (test-failure-log . #f) (test-success-log . "server/built/test-success/rml-neural.txt"))) (checksum . "5e3c95ab118007e16ac25627229674894e8c5302") (checksum-error . #f) (collection . (multi)) (conflicts . ()) (date-added . 1550686995) (dependencies . ("base" "math-lib" "plot-gui-lib" "plot-lib" "rackunit-lib" "scribble-lib" "scribble-math" "racket-doc" "racket-index" "sandbox-lib" "cover-coveralls")) (description . "Pedantic implementation of neural networks for deep learning in Racket") (implies . ()) (license . #f) (modules . ((lib "rml-neural/tests/rml-neural.rkt") (lib "rml-neural/activation.rkt") (lib "rml-neural/scribblings/act-plots.rkt") (lib "rml-neural/flmatrix.rkt") (lib "rml-neural/cost.rkt") (lib "rml-neural/private/contract.rkt") (lib "rml-neural/scribblings/activation.scrbl") (lib "rml-neural/scribblings/_rml-neural.scrbl") (lib "rml-neural/perceptron.rkt") (lib "rml-neural/main.rkt") (lib "rml-neural/private/act-struct.rkt") (lib "rml-neural/tests/test-doc-complete.rkt") (lib "rml-neural/private/act-syntax.rkt") (lib "rml-neural/private/rml-neural.rkt") (lib "rml-neural/private/act-plot.rkt") (lib "rml-neural/scribblings/rml-neural.scrbl"))) (name . "rml-neural") (ring . 1) (rt-dependencies . ("base" "math-lib" "plot-gui-lib" "plot-lib" "rackunit-lib")) (search-terms . #hasheq((:build-success: . #t) (:docs: . #t) (author:johnstonskj@gmail.com . #t) (author:johnstonskjÎ»48dbea7 . #t) (ml . #t) (ring:1 . #t))) (source . "https://github.com/johnstonskj/rml-neural.git") (tags . ("ml")) (versions . #hash((default . #hasheq((checksum . "5e3c95ab118007e16ac25627229674894e8c5302") (source . "https://github.com/johnstonskj/rml-neural.git") (source_url . "https://github.com/johnstonskj/rml-neural.git"))))))