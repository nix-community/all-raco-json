#hasheq((author . "alexander@knauth.org") (authors . ("alexander@knauth.org")) (build . #hash((conflicts-log . #f) (dep-failure-log . #f) (docs . (("main" "mutable-match-lambda" "doc/mutable-match-lambda@mutable-match-lambda/index.html"))) (failure-log . #f) (min-failure-log . #f) (success-log . "server/built/install/mutable-match-lambda.txt") (test-failure-log . #f) (test-success-log . "server/built/test-success/mutable-match-lambda.txt"))) (checksum . "28ea2c1f4e7a92826308c937608d4d91f2ead051") (checksum-error . #f) (collection . (multi)) (conflicts . ()) (dependencies . ("base" "kw-utils" "rackunit-lib" "at-exp-lib" "scribble-lib" "sandbox-lib" "racket-doc")) (description . "") (implies . ()) (modules . ((lib "mutable-match-lambda/mutable-match-lambda-procedure.rkt") (lib "mutable-match-lambda/main.rkt") (lib "mutable-match-lambda/let-inferred-name.rkt") (lib "mutable-match-lambda/make-clause-proc.rkt") (lib "mutable-match-lambda/communication.rkt") (lib "mutable-match-lambda/prop-object-name.rkt") (lib "mutable-match-lambda/docs/mutable-match-lambda.scrbl") (lib "mutable-match-lambda/syntax-to-string.rkt"))) (name . "mutable-match-lambda") (ring . 1) (search-terms . #hasheq((:build-success: . #t) (:docs: . #t) (:no-desc: . #t) (author:alexander@knauth.org . #t) (deprecated . #t) (ring:1 . #t))) (source . "git://github.com/AlexKnauth/mutable-match-lambda") (tags . ("deprecated")) (versions . #hash((default . #hasheq((checksum . "28ea2c1f4e7a92826308c937608d4d91f2ead051") (source . "git://github.com/AlexKnauth/mutable-match-lambda") (source_url . "http://github.com/AlexKnauth/mutable-match-lambda/tree/master"))))))