#hasheq((author . "jackhfirth@gmail.com alexander@knauth.org") (authors . ("jackhfirth@gmail.com" "alexander@knauth.org")) (build . #hash((conflicts-log . #f) (dep-failure-log . #f) (docs . ()) (failure-log . #f) (min-failure-log . #f) (success-log . "server/built/install/lens-data.txt") (test-failure-log . #f) (test-success-log . "server/built/test-success/lens-data.txt"))) (checksum . "733db7744921409b69ddc78ae5b23ffaa6b91e37") (checksum-error . #f) (collection . (multi)) (conflicts . ()) (dependencies . ("racket" "base" "lens-common" "rackunit-lib" "fancy-app" "syntax-classes-lib" "struct-update-lib" "kw-make-struct-lib" "reprovide-lang-lib" "sweet-exp-lib")) (description . "Lens constructors for various Racket data structures") (implies . ()) (license . #f) (modules . ((lib "lens/private/struct/main.rkt") (lib "lens/private/vector/main.rkt") (lib "lens/private/hash/ref.rkt") (lib "lens/private/vector/ref.rkt") (lib "lens/private/list/flatten.rkt") (lib "lens/private/hash/pick.rkt") (lib "lens/private/list/append.rkt") (lib "lens/private/list/sublist.rkt") (lib "lens/private/isomorphism/data.rkt") (lib "lens/data.rkt") (lib "lens/private/vector/pick.rkt") (lib "lens/private/syntax/main.rkt") (lib "lens/data/list.rkt") (lib "lens/private/vector/nested.rkt") (lib "lens/private/list/list-ref-take-drop.rkt") (lib "lens/private/hash/main.rkt") (lib "lens/data/string.rkt") (lib "lens/private/util/alternating-list.rkt") (lib "lens/private/list/join-list.rkt") (lib "lens/private/list/main.rkt") (lib "lens/private/vector/join-vector.rkt") (lib "lens/private/struct/field.rkt") (lib "lens/data/vector.rkt") (lib "lens/private/hash/hash-filterer.rkt") (lib "lens/private/tests/gen-lens-fallback-loop.rkt") (lib "lens/private/stream/stream.rkt") (lib "lens/private/hash/nested.rkt") (lib "lens/private/list/cadr-etc.rkt") (lib "lens/private/dict/dict.rkt") (lib "lens/private/syntax/srcloc.rkt") (lib "lens/private/string/join-string.rkt") (lib "lens/data/struct.rkt") (lib "lens/private/isomorphism/main.rkt") (lib "lens/private/util/functional-dict.rkt") (lib "lens/private/set/set-filterer.rkt") (lib "lens/data/stream.rkt") (lib "lens/private/syntax/syntax.rkt") (lib "lens/private/hash/join-hash.rkt") (lib "lens/private/util/immutable.rkt") (lib "lens/private/view-set/set-all.rkt") (lib "lens/private/struct/struct-nested.rkt") (lib "lens/private/syntax/stx.rkt") (lib "lens/private/string/string-split.rkt") (lib "lens/private/string/main.rkt") (lib "lens/private/string/string.rkt") (lib "lens/private/list/join-assoc.rkt") (lib "lens/private/list/multi.rkt") (lib "lens/data/dict.rkt") (lib "lens/private/struct/struct.rkt") (lib "lens/private/set/set-member.rkt") (lib "lens/private/struct/struct-list.rkt") (lib "lens/private/list/map.rkt") (lib "lens/private/dict/dict-nested.rkt") (lib "lens/private/util/improper-list-length.rkt") (lib "lens/private/list/car-cdr.rkt") (lib "lens/private/match.rkt") (lib "lens/private/util/functional-set.rkt") (lib "lens/private/list/reverse.rkt") (lib "lens/data/hash.rkt") (lib "lens/private/syntax/syntax-keyword.rkt") (lib "lens/private/struct/struct-join.rkt") (lib "lens/private/list/assoc.rkt") (lib "lens/private/string/substring.rkt"))) (name . "lens-data") (ring . 1) (rt-dependencies . (("racket" #:version "6.3") "base" "lens-common" "rackunit-lib" "fancy-app" "syntax-classes-lib" "struct-update-lib" "kw-make-struct-lib" "reprovide-lang-lib")) (search-terms . #hasheq((:build-success: . #t) (author:alexander@knauth.org . #t) (author:jackhfirth@gmail.com . #t) (data . #t) (functional . #t) (lens . #t) (ring:1 . #t))) (source . "http://github.com/jackfirth/lens/tree/master?path=lens-data") (tags . ("data" "functional" "lens")) (versions . #hash((default . #hasheq((checksum . "733db7744921409b69ddc78ae5b23ffaa6b91e37") (source . "git://github.com/jackfirth/lens?path=lens-data") (source_url . "http://github.com/jackfirth/lens/tree/master?path=lens-data"))))))