#hasheq((author . "lexi.lambda@gmail.com") (authors . ("lexi.lambda@gmail.com")) (build . #hash((conflicts-log . #f) (dep-failure-log . #f) (docs . ()) (failure-log . #f) (min-failure-log . #f) (success-log . "server/built/install/collections-lib.txt") (test-failure-log . #f) (test-success-log . "server/built/test-success/collections-lib.txt"))) (checksum . "c4822fc200b0488922cd6e86b4f2ea7cf8c565da") (checksum-error . #f) (collection . (multi)) (conflicts . ()) (dependencies . ("base" "curly-fn-lib" "functional-lib" "match-plus" "static-rename" "unstable-list-lib")) (description . "") (implies . ()) (modules . ((lib "data/collection/collection.rkt") (lib "data/collection/indexable.rkt") (lib "data/collection/match.rkt") (lib "data/collection/sequence.rkt") (lib "data/collection/private/random-access.rkt") (lib "data/collection/countable.rkt") (lib "data/collection/private/util.rkt") (lib "data/collection/contract.rkt") (lib "data/collection/experimental/quasi.rkt") (lib "data/collection.rkt"))) (name . "collections-lib") (ring . 1) (search-terms . #hasheq((:build-success: . #t) (:no-desc: . #t) (:no-tag: . #t) (author:lexi.lambda@gmail.com . #t) (ring:1 . #t))) (source . "http://github.com/lexi-lambda/racket-collections/tree/master?path=collections-lib") (tags . ()) (versions . #hash((default . #hasheq((checksum . "c4822fc200b0488922cd6e86b4f2ea7cf8c565da") (source . "git://github.com/lexi-lambda/racket-collections?path=collections-lib") (source_url . "http://github.com/lexi-lambda/racket-collections/tree/master?path=collections-lib"))))))