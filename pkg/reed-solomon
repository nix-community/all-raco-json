#hasheq((author . "chenxiao770117@gmail.com") (authors . ("chenxiao770117@gmail.com")) (build . #hash((conflicts-log . #f) (dep-failure-log . #f) (docs . (("main" "reed-solomon" "doc/reed-solomon@reed-solomon/index.html"))) (failure-log . #f) (min-failure-log . #f) (success-log . "server/built/install/reed-solomon.txt") (test-failure-log . #f) (test-success-log . "server/built/test-success/reed-solomon.txt"))) (checksum . "db00b7536f64b6f31a15819d7ba5f6783a4f9d31") (checksum-error . #f) (collection . (multi)) (conflicts . ()) (dependencies . ("base" "rackunit-lib" "racket-doc" "scribble-lib")) (description . "Reed-Solomon implementation") (implies . ()) (license . #f) (modules . ((lib "reed-solomon/tests/decode/syndrome-test.rkt") (lib "reed-solomon/tests/decode/forney-test.rkt") (lib "reed-solomon/lib/share/gf.rkt") (lib "reed-solomon/lib/share/euclidean.rkt") (lib "reed-solomon/example/example.rkt") (lib "reed-solomon/lib/decode/chien-search.rkt") (lib "reed-solomon/lib/decode/express/euclidean-decode/euclidean-decode.rkt") (lib "reed-solomon/tests/encode/encode-test.rkt") (lib "reed-solomon/lib/decode/express/finally/finally.rkt") (lib "reed-solomon/lib/share/poly.rkt") (lib "reed-solomon/tests/decode/chien-search-test.rkt") (lib "reed-solomon/lib/encode/express/error-code/error-code.rkt") (lib "reed-solomon/lib/decode/syndrome.rkt") (lib "reed-solomon/lib/encode/generator-poly.rkt") (lib "reed-solomon/tests/share/euclidean-test.rkt") (lib "reed-solomon/lib/decode/express/input/input.rkt") (lib "reed-solomon/lib/decode/express/too-many-errors/too-many-errors.rkt") (lib "reed-solomon/lib/share/lib.rkt") (lib "reed-solomon/lib/encode/express/express.rkt") (lib "reed-solomon/tests/encode/generate-poly-test.rkt") (lib "reed-solomon/lib/decode/express/syndrome-poly/syndrome-poly.rkt") (lib "reed-solomon/lib/encode/express/galois-fields/galois-fields.rkt") (lib "reed-solomon/lib/decode/express/start.rkt") (lib "reed-solomon/lib/encode/express/generator-poly/generator-poly.rkt") (lib "reed-solomon/lib/encode/encode.rkt") (lib "reed-solomon/main.rkt") (lib "reed-solomon/lib/encode/express/message-poly/message-poly.rkt") (lib "reed-solomon/lib/encode/express/input/input.rkt") (lib "reed-solomon/tests/decode/decode-test.rkt") (lib "reed-solomon/lib/decode/express/express.rkt") (lib "reed-solomon/lib/encode/express/primitive-poly/primitive-poly.rkt") (lib "reed-solomon/lib/decode/error-locator-poly.rkt") (lib "reed-solomon/lib/encode/express/start.rkt") (lib "reed-solomon/tests/share/gf-field-test.rkt") (lib "reed-solomon/lib/decode/express/no-error/no-error.rkt") (lib "reed-solomon/lib/decode/decode.rkt") (lib "reed-solomon/scribble/reed-solomon.scrbl") (lib "reed-solomon/lib/decode/express/forney/forney.rkt") (lib "reed-solomon/tests/decode/correct-error-test.rkt") (lib "reed-solomon/lib/decode/correct-error.rkt") (lib "reed-solomon/lib/decode/forney.rkt") (lib "reed-solomon/tests/share/poly-test.rkt") (lib "reed-solomon/tests/decode/error-locator-poly-test.rkt") (lib "reed-solomon/lib/decode/express/chien-search/chien-search.rkt"))) (name . "reed-solomon") (ring . 1) (rt-dependencies . ("base" "rackunit-lib" "racket-doc" "scribble-lib")) (search-terms . #hasheq((:build-success: . #t) (:docs: . #t) (author:chenxiao770117@gmail.com . #t) (reed-solomon . #t) (ring:1 . #t))) (source . "https://github.com/simmone/racket-reed-solomon.git") (tags . ("reed-solomon")) (versions . #hash((default . #hasheq((checksum . "db00b7536f64b6f31a15819d7ba5f6783a4f9d31") (source . "https://github.com/simmone/racket-reed-solomon.git") (source_url . "https://github.com/simmone/racket-reed-solomon.git"))))))